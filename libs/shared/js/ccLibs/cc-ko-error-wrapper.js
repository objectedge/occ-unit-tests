define("ccKoErrorWrapper",["knockout","ccLogger","ccRestClient"],function(r,e,t){"use strict";function n(t){return function(){try{return t.apply(this,arguments)}catch(t){e.error(t);var n=arguments[0],i=r.contextFor($(n)[0]).$root;if(i&&i.isPreview&&i.isPreview()){var s=$(n).parents(".widget-container,.stack-container");s.length>0&&(s.find(".stack-template,.displayTemplate").addClass("error"),s.find("div.display-error").show(),s.find("span.error-msg").first().text(t.message));var a=$(n).prev("div.sf-display-error");0==a.length&&(a=$(n).parents().prev("div.sf-display-error")),a.length>0&&(a.show(),a.find("span.sf-error-msg").text(t.message),a.next("div").addClass("sf-error"))}}}}var i,s=["attr","css","template","text","style","value"];if(t.previewMode)for(i in s){var a=s[i];if(r.bindingHandlers[a]&&r.bindingHandlers[a].update){var d=r.bindingHandlers[a].update;r.bindingHandlers[a].update=n(d)}}});
//# sourceMappingURL=cc-ko-error-wrapper.js.map