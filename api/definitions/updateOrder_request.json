{
  "properties": {
    "combineLineItems": {
      "description": "Value to determine if line items are to be combined. Can be yes or no.",
      "type": "string"
    },
    "isAnonymousCheckout": {
      "description": "Returns false if the order is for a logged-in user.",
      "type": "boolean"
    },
    "shippingGroups": {
      "description": "The shipping groups for the order.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "shippingMethod": {
            "description": "The shipping method details for the order.",
            "type": "object",
            "properties": {
              "value": {
                "description": "The shipping method applied to the order.",
                "type": "string"
              }
            }
          },
          "shippingAddress": {
            "description": "The shipping address details.",
            "type": "object",
            "properties": {
              "lastName": {
                "description": "Last name.",
                "type": "string"
              },
              "country": {
                "description": "Country.",
                "type": "string"
              },
              "address3": {
                "description": "Address snippet.",
                "type": "string"
              },
              "address2": {
                "description": "Address snippet.",
                "type": "string"
              },
              "city": {
                "description": "City.",
                "type": "string"
              },
              "prefix": {
                "description": "Name prefix.",
                "type": "string"
              },
              "address1": {
                "description": "Address snippet.",
                "type": "string"
              },
              "postalCode": {
                "description": "Postal code.",
                "type": "string"
              },
              "jobTitle": {
                "description": "Job title.",
                "type": "string"
              },
              "companyName": {
                "description": "Company name.",
                "type": "string"
              },
              "county": {
                "description": "County.",
                "type": "string"
              },
              "suffix": {
                "description": "Name suffix.",
                "type": "string"
              },
              "selectedCountry": {
                "description": "Country code.",
                "type": "string"
              },
              "firstName": {
                "description": "First name",
                "type": "string"
              },
              "phoneNumber": {
                "description": "Phone number.",
                "type": "string"
              },
              "alias": {
                "description": "Address alias.",
                "type": "string"
              },
              "faxNumber": {
                "description": "Fax number.",
                "type": "string"
              },
              "middleName": {
                "description": "Middle name.",
                "type": "string"
              },
              "state": {
                "description": "State.",
                "type": "string"
              },
              "selectedState": {
                "description": "State code.",
                "type": "string"
              },
              "email": {
                "description": "Email address.",
                "type": "string"
              },
              "state_ISOCode": {
                "description": "State ISO code.",
                "type": "string"
              }
            }
          },
          "items": {
            "description": "The array of products in the shipping group.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "commerceItemId": {
                  "description": "The unique line item ID distinguisher. This field becomes required for split shipping when combineLineItems is set to no.",
                  "type": "string"
                },
                "quantity": {
                  "description": "The quantity of the product in the shipping group.",
                  "type": "integer"
                },
                "productId": {
                  "description": "ID of the product in the cart.",
                  "type": "string"
                },
                "catRefId": {
                  "description": "The category to which the product belongs.",
                  "type": "string"
                }
              },
              "required": [
                "quantity",
                "productId",
                "catRefId"
              ]
            }
          }
        },
        "required": [
          "items"
        ]
      }
    },
    "appliedPromotions": {
      "description": "The array of applied promotions.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "shippingMethod": {
      "description": "The shipping method details for the order.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The shipping method applied to the order.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "payments": {
      "description": "Payment details to update the order.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "PONumber": {
            "description": "Purchase order number. Pament type:invoice",
            "type": "string"
          },
          "PayerID": {
            "description": "Payer ID relevant to paypal checkout type. Payment type:paypalCheckout.",
            "type": "string"
          },
          "amount": {
            "description": "Amount to be authorized from the gift card. Payment type:invoice,card, physicalGiftCard, paypalCheckout, payUWebLatamCheckout.",
            "type": "number"
          },
          "cardTypeName": {
            "description": "Credit/Debit card type name. e.g. Visa. Payment type:card.",
            "type": "string"
          },
          "cardType": {
            "description": "Credit/Debit card type. e.g. visa. Payment type:card.",
            "type": "string"
          },
          "type": {
            "description": "Payment type. e.g. paypalCheckout, payUWebLatamCheckout.",
            "type": "string"
          },
          "endYear": {
            "description": "Credit/Debit card expiry year. Payment type:card.",
            "type": "string"
          },
          "cardCVV": {
            "description": "Credit/Debit card secret pin. Payment type:card.",
            "type": "string"
          },
          "paymentGroupId": {
            "description": "Payment Group Id of the gift card payment group. Payment type:physicalGiftCard.",
            "type": "string"
          },
          "nameOnCard": {
            "description": "Name on the credit/debit card. Payment type:card.",
            "type": "string"
          },
          "giftCardNumber": {
            "description": "Gift card number used for payment. Payment type:physicalGiftCard.",
            "type": "string"
          },
          "paymentId": {
            "description": "Payment ID relevant to the payment type. Payment type:paypalCheckout, payUWebLatamCheckout.",
            "type": "string"
          },
          "giftCardPin": {
            "description": "Gift card pin. Payment type:physicalGiftCard.",
            "type": "string"
          },
          "endMonth": {
            "description": "Credit/Debit card expiry month. Payment type:card.",
            "type": "string"
          },
          "cardNumber": {
            "description": "Credit/Debit card number used for payment. Payment type:card.",
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      }
    },
    "shoppingCart": {
      "description": "The shopping cart contents of the current order.",
      "type": "object",
      "properties": {
        "coupons": {
          "description": "The array of coupons applied to the order.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "description": "The coupon code.",
                "type": "string"
              },
              "level": {
                "description": "The level of the coupon (whether the coupon is item level, etc).",
                "type": "string"
              },
              "description": {
                "description": "The coupon description.",
                "type": "string"
              },
              "id": {
                "description": "The coupon ID.",
                "type": "string"
              },
              "status": {
                "description": "The current status of the coupon.",
                "type": "string"
              }
            },
            "required": [
              "code",
              "level",
              "id",
              "status"
            ]
          }
        },
        "items": {
          "description": "The array of products in the shopping cart.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "serviceAccountId": {
                "description": "The service account ID associated to the current item.",
                "type": "string"
              },
              "deactivationDate": {
                "description": "The deactivation date in ISO format.",
                "type": "string"
              },
              "quantity": {
                "description": "The quantity of the product in the cart.",
                "type": "integer"
              },
              "productId": {
                "description": "ID of the product in the cart.",
                "type": "string"
              },
              "externalRecurringCharge": {
                "description": "The external recurring price.",
                "type": "number"
              },
              "giftWithPurchaseCommerceItemMarkers": {
                "description": "giftWithPurchaseCommerceItemMarker information. If giftWithPurchaseCommerceItemMarker information is present on the order is should be passed in.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "remainingQuantity": {
                      "description": "The quantity of the commerce item that is not affected by gift with purchase.",
                      "type": "number"
                    },
                    "selectedQuantity": {
                      "description": "The quantity of the free gift that this commerce item is making free and was selected by the shopper.",
                      "type": "number"
                    },
                    "data": {
                      "description": "The gift hash code for this gift with purchase promotion.",
                      "type": "integer"
                    },
                    "automaticQuantity": {
                      "description": "The quantity of the free gift that this commerce item is making free and was auto added by pricing.",
                      "type": "number"
                    },
                    "value": {
                      "description": "The gift with purchase promotion id.",
                      "type": "string"
                    },
                    "targetedQuantity": {
                      "description": "The quantity of the free gift that this commerce item is making free and was targeted by pricing.",
                      "type": "number"
                    },
                    "key": {
                      "description": "atg.gwp",
                      "type": "string"
                    }
                  },
                  "required": [
                    "remainingQuantity",
                    "selectedQuantity",
                    "data",
                    "automaticQuantity",
                    "value",
                    "targetedQuantity",
                    "key"
                  ]
                }
              },
              "externalData": {
                "description": "External data to be associated with a commerce item, provided by a configurator system.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "values": {
                      "description": "The array of values associated with an externalData item.",
                      "type": "object",
                      "properties": {
                        "dynamic_property_key": {
                          "description": "This property's name and value will be retrieved from a configurator system, so will be dynamically set.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "dynamic_property_key"
                      ]
                    },
                    "name": {
                      "description": "The name to be associated with the externalData item.",
                      "type": "string"
                    },
                    "actionCode": {
                      "description": "The action code that has been set on the externalData item by the configurator system.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "values",
                    "name"
                  ]
                }
              },
              "billingAccountId": {
                "description": "The billing account ID associated to the current item.",
                "type": "string"
              },
              "externalPriceQuantity": {
                "description": "The maximum quantity of this line item which may be purchased at the external price (this quantity will be verified to ensure it is allowable).",
                "type": "integer"
              },
              "externalRecurringChargeFrequency": {
                "description": "The frequency for the recurring charge e.g. Monthly.",
                "type": "string"
              },
              "childItems": {
                "description": "The array of child items in the item, if the item is a configurable item. A child item can itself contain child item array if it is a configurable product in itself.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "serviceAccountId": {
                      "description": "The service account ID associated to the current item.",
                      "type": "string"
                    },
                    "configurationOptionId": {
                      "description": "ID of the catalog's configurationOption associated with this item.",
                      "type": "string"
                    },
                    "deactivationDate": {
                      "description": "The deactivation date in ISO format.",
                      "type": "string"
                    },
                    "addOnItem": {
                      "description": "Whether the child item is an add-on (externally configured) or not (externally configured).",
                      "type": "boolean"
                    },
                    "quantity": {
                      "description": "The quantity of the product in the cart.",
                      "type": "integer"
                    },
                    "productId": {
                      "description": "ID of the product in the cart.",
                      "type": "string"
                    },
                    "externalRecurringCharge": {
                      "description": "The external recurring price.",
                      "type": "number"
                    },
                    "externalData": {
                      "description": "External data to be associated with a commerce item, provided by a configurator system.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "values": {
                            "description": "The array of values associated with an externalData item.",
                            "type": "object",
                            "properties": {
                              "dynamic_property_key": {
                                "description": "This property's name and value will be retrieved from a configurator system, so will be dynamically set.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "dynamic_property_key"
                            ]
                          },
                          "name": {
                            "description": "The name to be associated with the externalData item.",
                            "type": "string"
                          },
                          "actionCode": {
                            "description": "The action code that has been set on the externalData item by the configurator system.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "values",
                          "name"
                        ]
                      }
                    },
                    "billingAccountId": {
                      "description": "The billing account ID associated to the current item.",
                      "type": "string"
                    },
                    "externalPriceQuantity": {
                      "description": "The maximum quantity of this line item which may be purchased at the external price (this quantity will be verified to ensure it is allowable). The value of this property should be -1 in case if the current item is a sub item of a configurable product ",
                      "type": "integer"
                    },
                    "externalRecurringChargeFrequency": {
                      "description": "The frequency for the recurring charge e.g. Monthly.",
                      "type": "string"
                    },
                    "configurablePropertyId": {
                      "description": "ID of the catalog's configurableProperty associated with this item.",
                      "type": "string"
                    },
                    "catRefId": {
                      "description": "Sku reference id.",
                      "type": "string"
                    },
                    "externalRecurringChargeDuration": {
                      "description": "The duration for the recurring charge e.g. 12 months.",
                      "type": "string"
                    },
                    "externalPrice": {
                      "description": "A price for a quantity of 1 of this line item which will be used in place of the standard catalog price (this price will be verified to ensure it is allowable).",
                      "type": "number"
                    },
                    "customerAccountId": {
                      "description": "The customer account ID associated to the current item.",
                      "type": "string"
                    },
                    "assetId": {
                      "description": "The asset ID corresponding to the current item.",
                      "type": "string"
                    },
                    "detailedRecurringChargeInfo": {
                      "description": "Detailed Item Price Information.",
                      "type": "object",
                      "properties": {
                        "discounted": {
                          "description": "Whether the price is discounted.",
                          "type": "boolean"
                        },
                        "amount": {
                          "description": "The monetary amount for the recurring charge.",
                          "type": "number"
                        },
                        "quantity": {
                          "description": "The number of items covered by this recurring charge price info",
                          "type": "integer"
                        },
                        "tax": {
                          "description": "Monetary tax amount.",
                          "type": "number"
                        },
                        "orderDiscountShare": {
                          "description": "The order Discount Share.",
                          "type": "number"
                        },
                        "detailedUnitPrice": {
                          "description": "The detailed unit price: amount / quantity. (read-only)",
                          "type": "number"
                        },
                        "currencyCode": {
                          "description": "The three character currency code for the monetary amounts.",
                          "type": "string"
                        }
                      }
                    },
                    "shopperInput": {
                      "description": "Map of shopper input keys to values",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "type": "object"
                    },
                    "activationDate": {
                      "description": "The activation date in ISO format.",
                      "type": "string"
                    },
                    "serviceId": {
                      "description": "The service ID associated to the current item.",
                      "type": "string"
                    },
                    "recurringCharge": {
                      "description": "The recurring charge for the item.",
                      "type": "number"
                    }
                  },
                  "required": [
                    "quantity",
                    "productId",
                    "catRefId",
                    "externalPrice",
                    "externalPriceQuantity"
                  ]
                }
              },
              "externalRecurringChargeDuration": {
                "description": "The duration for the recurring charge e.g. 12 months.",
                "type": "string"
              },
              "catRefId": {
                "description": "The category to which the product belongs.",
                "type": "string"
              },
              "externalPrice": {
                "description": "A price for a quantity of 1 of this line item which will be used in place of the standard catalog price (this price will be verified to ensure it is allowable).",
                "type": "number"
              },
              "commerceItemId": {
                "description": "The unique line item ID distinguisher. This field becomes required for split shipping when combineLineItems is set to no.",
                "type": "string"
              },
              "customerAccountId": {
                "description": "The customer account ID associated to the current item.",
                "type": "string"
              },
              "assetId": {
                "description": "The asset ID corresponding to the current item.",
                "type": "string"
              },
              "actionCode": {
                "description": "The action code that has been set on the item by the configurator system.",
                "type": "string"
              },
              "detailedRecurringChargeInfo": {
                "description": "Detailed Item Price Information.",
                "type": "object",
                "properties": {
                  "discounted": {
                    "description": "Whether the price is discounted.",
                    "type": "boolean"
                  },
                  "amount": {
                    "description": "The monetary amount for the recurring charge.",
                    "type": "number"
                  },
                  "quantity": {
                    "description": "The number of items covered by this recurring charge price info",
                    "type": "integer"
                  },
                  "tax": {
                    "description": "Monetary tax amount.",
                    "type": "number"
                  },
                  "orderDiscountShare": {
                    "description": "The order Discount Share.",
                    "type": "number"
                  },
                  "detailedUnitPrice": {
                    "description": "The detailed unit price: amount / quantity. (read-only)",
                    "type": "number"
                  },
                  "currencyCode": {
                    "description": "The three character currency code for the monetary amounts.",
                    "type": "string"
                  }
                }
              },
              "shopperInput": {
                "description": "Map of shopper input keys to values",
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              "activationDate": {
                "description": "The activation date in ISO format.",
                "type": "string"
              },
              "serviceId": {
                "description": "The service ID associated to the current item.",
                "type": "string"
              },
              "recurringCharge": {
                "description": "The recurring charge for the item.",
                "type": "number"
              }
            },
            "required": [
              "quantity",
              "productId",
              "catRefId"
            ]
          }
        },
        "orderTotal": {
          "description": "The total price of the order.",
          "type": "number"
        }
      },
      "required": [
        "items"
      ]
    },
    "shippingAddress": {
      "description": "The shipping address details.",
      "type": "object",
      "properties": {
        "lastName": {
          "description": "Last name.",
          "type": "string"
        },
        "country": {
          "description": "Country.",
          "type": "string"
        },
        "address3": {
          "description": "Address snippet.",
          "type": "string"
        },
        "address2": {
          "description": "Address snippet.",
          "type": "string"
        },
        "city": {
          "description": "City.",
          "type": "string"
        },
        "prefix": {
          "description": "Name prefix.",
          "type": "string"
        },
        "address1": {
          "description": "Address snippet.",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code.",
          "type": "string"
        },
        "jobTitle": {
          "description": "Job title.",
          "type": "string"
        },
        "companyName": {
          "description": "Company name.",
          "type": "string"
        },
        "county": {
          "description": "County.",
          "type": "string"
        },
        "suffix": {
          "description": "Name suffix.",
          "type": "string"
        },
        "selectedCountry": {
          "description": "Country code.",
          "type": "string"
        },
        "firstName": {
          "description": "First name.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number.",
          "type": "string"
        },
        "faxNumber": {
          "description": "Fax number.",
          "type": "string"
        },
        "alias": {
          "description": "Address alias.",
          "type": "string"
        },
        "middleName": {
          "description": "Middle name.",
          "type": "string"
        },
        "state": {
          "description": "State.",
          "type": "string"
        },
        "selectedState": {
          "description": "State code.",
          "type": "string"
        },
        "email": {
          "description": "Email address.",
          "type": "string"
        },
        "state_ISOCode": {
          "description": "State ISO code.",
          "type": "string"
        }
      },
      "required": [
        "lastName",
        "country",
        "city",
        "address1",
        "postalCode",
        "selectedCountry",
        "firstName",
        "state",
        "selectedState",
        "email",
        "state_ISOCode"
      ]
    },
    "billingAddress": {
      "description": "The billing address details.",
      "type": "object",
      "properties": {
        "lastName": {
          "description": "Last name.",
          "type": "string"
        },
        "country": {
          "description": "Country.",
          "type": "string"
        },
        "address3": {
          "description": "Address snippet.",
          "type": "string"
        },
        "address2": {
          "description": "Address snippet.",
          "type": "string"
        },
        "city": {
          "description": "City.",
          "type": "string"
        },
        "prefix": {
          "description": "Name prefix.",
          "type": "string"
        },
        "address1": {
          "description": "Address snippet.",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code.",
          "type": "string"
        },
        "jobTitle": {
          "description": "Job title.",
          "type": "string"
        },
        "companyName": {
          "description": "Company name.",
          "type": "string"
        },
        "county": {
          "description": "County.",
          "type": "string"
        },
        "suffix": {
          "description": "Name suffix.",
          "type": "string"
        },
        "selectedCountry": {
          "description": "Country code.",
          "type": "string"
        },
        "firstName": {
          "description": "First name.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number.",
          "type": "string"
        },
        "faxNumber": {
          "description": "Fax number.",
          "type": "string"
        },
        "alias": {
          "description": "Address alias.",
          "type": "string"
        },
        "middleName": {
          "description": "Middle name.",
          "type": "string"
        },
        "state": {
          "description": "State.",
          "type": "string"
        },
        "selectedState": {
          "description": "State code.",
          "type": "string"
        },
        "state_ISOCode": {
          "description": "State ISO code.",
          "type": "string"
        }
      },
      "required": [
        "lastName",
        "country",
        "city",
        "address1",
        "postalCode",
        "selectedCountry",
        "firstName",
        "state",
        "selectedState",
        "state_ISOCode"
      ]
    },
    "giftWithPurchaseOrderMarkers": {
      "description": "giftWithPurchaseOrderMarker information. Required if giftWithPurchaseOrderMarker information is present.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "quantity": {
            "description": "The total quantity of sku for this gift selection.",
            "type": "number"
          },
          "selectedQuantity": {
            "description": "The quantity of free sku for this gift selection that has already been selected by the Shopper and added to the order.",
            "type": "integer"
          },
          "removedQuantity": {
            "description": "The amount of free quantity that has since been manually removed by a Shopper.",
            "type": "number"
          },
          "data": {
            "description": "An identifier used to track which gift selection in the promotion this is.  It allows the commerce item marker to link to this one.",
            "type": "integer"
          },
          "autoRemove": {
            "description": "Flag to indicate whether free gifts should be auto removed if the promotion no longer qualifies.",
            "type": "boolean"
          },
          "giftDetail": {
            "description": "String identifying the free gift, usually the repository id of the gift type.",
            "type": "string"
          },
          "automaticQuantity": {
            "description": "The quantity of free sku for this gift selection that has already been auto added to the order.",
            "type": "number"
          },
          "giftType": {
            "description": "The type of the gift. (sku, product)",
            "type": "string"
          },
          "failedQuantity": {
            "description": "The amount of automatic free quantity that failed to be added to the cart due to some pricing error, e.g. invalid site.",
            "type": "number"
          },
          "value": {
            "description": "The gift with purchase promotion id",
            "type": "string"
          },
          "targetedQuantity": {
            "description": "The quantity of free sku for this gift selection that has already been targeted and made free by the calculator in the order.",
            "type": "number"
          },
          "key": {
            "description": "atg.gwp",
            "type": "string"
          }
        },
        "required": [
          "quantity",
          "selectedQuantity",
          "removedQuantity",
          "data",
          "autoRemove",
          "giftDetail",
          "automaticQuantity",
          "giftType",
          "failedQuantity",
          "value",
          "targetedQuantity",
          "key"
        ]
      }
    }
  },
  "required": [
    "shippingMethod",
    "shoppingCart",
    "shippingAddress"
  ],
  "example": {
    "isAnonymousCheckout": false,
    "visitId": "27c79ed0-384f-4658-824d-c5b8518bfde0",
    "appliedPromotions": [
      "explicitItemFreeDiscount"
    ],
    "shippingMethod": {
      "value": "twoDay"
    },
    "payments": [
      {
        "cardCVV": "123",
        "nameOnCard": "test",
        "cardTypeName": "Visa",
        "cardType": "visa",
        "endMonth": "02",
        "type": "card",
        "endYear": 2018,
        "cardNumber": "4055011111111111"
      }
    ],
    "shoppingCart": {
      "coupons": [
        {
          "code": "FREETATTOO",
          "level": "item",
          "description": "Explicit Item Discount - FREETATTOO",
          "id": "explicitItemFreeDiscount",
          "totalAdjustment": "-21.99",
          "status": "claimed"
        }
      ],
      "items": [
        {
          "serviceAccountId": "serviceAcc-123",
          "deactivationDate": "2018-06-27T12:59:59Z",
          "quantity": 1,
          "dynamicPropertyMode": "pickup",
          "productId": "prod20006",
          "externalRecurringCharge": 10,
          "giftWithPurchaseCommerceItemMarkers": [],
          "externalData": [],
          "billingAccountId": "billingAcc-123",
          "externalRecurringChargeFrequency": "Monthly",
          "catRefId": "sku40105",
          "externalRecurringChargeDuration": "12",
          "customerAccountId": "customerAcc-123",
          "assetId": "asset10001",
          "actionCode": "Add",
          "detailedRecurringChargeInfo": [
            {
              "discounted": false,
              "amount": 10,
              "quantity": 1,
              "tax": 0,
              "orderDiscountShare": 0,
              "detailedUnitPrice": 10,
              "currencyCode": "USD"
            }
          ],
          "shopperInput": {
            "color": "neon",
            "initials": "M.C.K",
            "font": "courier"
          },
          "activationDate": "2017-06-27T15:30:00Z",
          "serviceId": "service-123",
          "recurringCharge": 10
        }
      ],
      "orderTotal": 109.46
    },
    "shippingAddress": {
      "lastName": "h",
      "country": "United States",
      "address3": "",
      "address2": "A2",
      "city": "C1",
      "prefix": "",
      "address1": "A1",
      "defaultCountryCode": null,
      "postalCode": "36123",
      "jobTitle": "",
      "companyName": "",
      "county": "",
      "suffix": "",
      "selectedCountry": "US",
      "firstName": "h",
      "phoneNumber": "34534533",
      "faxNumber": "",
      "alias": "",
      "middleName": "",
      "state": "Alabama",
      "selectedState": "AL",
      "email": "h@h.com",
      "state_ISOCode": "US-AL"
    },
    "id": "o10003",
    "billingAddress": {
      "lastName": "Test",
      "country": "United States",
      "address3": "",
      "address2": "Line 2",
      "city": "Montgomery",
      "prefix": "",
      "address1": "Line 1",
      "postalCode": "36123",
      "jobTitle": "",
      "companyName": "",
      "county": "",
      "suffix": "",
      "selectedCountry": "US",
      "firstName": "Steve",
      "phoneNumber": "45454545",
      "faxNumber": "",
      "alias": "",
      "middleName": "",
      "state": "Alabama",
      "selectedState": "AL",
      "state_ISOCode": "US-AL"
    },
    "dynamicPropertyShippingInstructions": "Test Instructions",
    "giftWithPurchaseOrderMarkers": [
      {
        "quantity": 1,
        "selectedQuantity": 0,
        "removedQuantity": 0,
        "data": "-1275480226",
        "automaticQuantity": 0,
        "giftType": "product",
        "autoRemove": true,
        "giftDetail": "camera_1",
        "repositoryId": "200001",
        "failedQuantity": 0,
        "value": "promo10002",
        "targetedQuantity": 0,
        "key": "atg.gwp"
      }
    ],
    "visitorId": "-6820098066093706883"
  }
}