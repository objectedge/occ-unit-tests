{
  "basePath": "/ccstoreui/v1",
  "paths": {
    "/registry": {
      "get": {
        "summary": "getRegistry",
        "produces": [
          "application/json"
        ],
        "operationId": "getRegistry",
        "description": "Get Registry. Get the endpoint registry.",
        "responses": "responses/getRegistry",
        "tags": [
          "OAuth"
        ]
      }
    },
    "/payment/auth": {
      "post": {
        "summary": "authPayment",
        "produces": [
          "application/json"
        ],
        "operationId": "authPayment",
        "description": "Auth Payment. Payment authorization endpoint.",
        "responses": "responses/authPayment",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/authPayment_request"
            },
            "in": "body",
            "name": "authPayment_request"
          }
        ],
        "tags": [
          "Payment"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/orders/getGiftWithPurchaseChoices": {
      "get": {
        "summary": "getGiftWithPurchaseChoices",
        "produces": [
          "application/json"
        ],
        "operationId": "getGiftWithPurchaseChoices",
        "description": "Get Gift With Purchase Choices. Get all of the products and skus available for selection for a gift with purchase gift. Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization context of logged in user.",
        "responses": "responses/getGiftWithPurchaseChoices",
        "parameters": [
          {
            "in": "query",
            "name": "giftWithPurchaseType",
            "description": "the gift type of the free gift. For example product or sku",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "giftWithPurchaseDetail",
            "description": "the gift detail of the free gift. This is typically a product or a sku Id",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/orders/confirmation/{uuid}": {
      "get": {
        "summary": "getOrderConfirmation",
        "produces": [
          "application/json"
        ],
        "operationId": "getOrderConfirmation",
        "description": "Get Order Confirmation. Returns the Order Confirmation data, specified by the UUID of the Order. The Order Confirmation data expires within 30 seconds of the order being submitted. Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization context of logged in user.",
        "responses": "responses/getOrderConfirmation",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "uuid",
            "description": "the uuid of the order.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/currencies/{id}": {
      "get": {
        "summary": "getCurrency",
        "produces": [
          "application/json"
        ],
        "operationId": "getCurrency",
        "description": "Get Currency. Get a single currency item.",
        "responses": "responses/getCurrency",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the requested currency.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Currency"
        ]
      }
    },
    "/merchant/returnReasons": {
      "get": {
        "summary": "getReturnReasons",
        "produces": [
          "application/json"
        ],
        "operationId": "getReturnReasons",
        "description": "Get Return Reasons. Lists the return reasons that can be given while receiving items against a return request",
        "responses": "responses/getReturnReasons",
        "tags": [
          "Merchant Settings"
        ]
      }
    },
    "/scheduledOrders/status/{id}": {
      "get": {
        "summary": "listExecutionStatusForScheduledOrderById",
        "produces": [
          "application/json"
        ],
        "operationId": "listExecutionStatusForScheduledOrderById",
        "description": "List Execution Status For Scheduled Order By Id. It will list the execution status for a scheduled order . Optionally takes the X-CCOrganization header to specify current Organization context of logged in user.",
        "responses": "responses/listExecutionStatusForScheduledOrderById",
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Offset of the scheduled orders list.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "limit of the scheduled orders list.",
            "type": "integer",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id of the Scheduled order.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Scheduled Orders"
        ]
      }
    },
    "/files/urlMapping/{id}": {
      "get": {
        "summary": "getFileURL",
        "produces": [
          "text/plain"
        ],
        "operationId": "getFileURL",
        "description": "Get File URL. Get a file URL given the path. Sends the URL as text(not as JSON). Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getFileURL",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID of the file.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Files"
        ]
      }
    },
    "/skus/{id}": {
      "get": {
        "summary": "getSku",
        "produces": [
          "application/json"
        ],
        "operationId": "getSku",
        "description": "Get Sku. Gets the data and related selected options of a SKU.",
        "responses": "responses/getSku",
        "parameters": [
          {
            "in": "query",
            "name": "storePriceListGroupId",
            "description": "The price list group id of the current Store.",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The skuId.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Skus"
        ]
      }
    },
    "/verify": {
      "post": {
        "summary": "verify",
        "produces": [
          "application/json"
        ],
        "operationId": "verify",
        "description": "Verify. Verify the auth status of a client.",
        "responses": "responses/verify",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/verify_request"
            },
            "in": "body",
            "name": "verify_request"
          }
        ],
        "tags": [
          "OAuth"
        ]
      }
    },
    "/sites/{id}": {
      "get": {
        "summary": "getSite",
        "produces": [
          "application/json"
        ],
        "operationId": "getSite",
        "description": "Get Site. Get a site by id.",
        "responses": "responses/getSite",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The id of the site.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sites"
        ]
      }
    },
    "/returnRequests/{id}": {
      "get": {
        "summary": "getReturnRequest",
        "produces": [
          "application/json"
        ],
        "operationId": "getReturnRequest",
        "description": "Get Return Request. Gets the return request details for a given Return Request ID. Optionally takes the x-ccasset-language headers to get translated content in another language. Also, additionally takes X-CCOrganization and x-ccsite headers.",
        "responses": "responses/getReturnRequest",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the Return Request.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Return Requests"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/prices/{id}": {
      "get": {
        "summary": "getAllPrices",
        "produces": [
          "application/json"
        ],
        "operationId": "getAllPrices",
        "description": "Get All Prices. Return the the list, sale and complex prices for the product or SKU. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getAllPrices",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "The type of price. Should be either of list or sale.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "skuId",
            "description": "The sku ID. If null, price for the product is returned.",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The product ID.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Prices"
        ]
      }
    },
    "/timezones/{id}": {
      "get": {
        "summary": "getTimezone",
        "produces": [
          "application/json"
        ],
        "operationId": "getTimezone",
        "description": "Get Timezone. Get a single timezone item for the provided id. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getTimezone",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the requested timezone.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Timezone"
        ]
      }
    },
    "/merchant/timezone": {
      "get": {
        "summary": "getMerchantTimezone",
        "produces": [
          "application/json"
        ],
        "operationId": "getMerchantTimezone",
        "description": "Get Merchant Timezone. Get the merchant selected timezone. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getMerchantTimezone",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Merchant Settings"
        ]
      }
    },
    "/collections": {
      "get": {
        "summary": "listCollections",
        "produces": [
          "application/json"
        ],
        "operationId": "listCollections",
        "description": "List Collections. Gets a list of collections based on category IDs.  Optionally takes the x-ccasset-language headers to get translated content in another language.Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization id of logged in user.",
        "responses": "responses/listCollections",
        "parameters": [
          {
            "in": "query",
            "name": "categoryIds",
            "description": "List of category IDs.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "catalogId",
            "description": "ID of the catalog.",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Collections"
        ]
      }
    },
    "/orders/reject": {
      "post": {
        "summary": "rejectOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "rejectOrder",
        "description": "Reject Order. Approver rejects an order. Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization context of logged in user.",
        "responses": "responses/rejectOrder",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/rejectOrder_request"
            },
            "in": "body",
            "name": "rejectOrder_request"
          }
        ],
        "tags": [
          "Orders"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/priceListGroups": {
      "get": {
        "summary": "listPriceListGroups",
        "produces": [
          "application/json"
        ],
        "operationId": "listPriceListGroups",
        "description": "List Price List Groups. Get a list of PriceListGroups.",
        "responses": "responses/listPriceListGroups",
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Index of the first element to return.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "defaultFirst",
            "description": "This for displaying default PriceListGroup first in the list",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of items to return.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "siteId",
            "description": "Site ID of the site",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sorting criteria. Following are the fields supported by this param: \n\n|Field|Type|Description|\n|------------------|------------------|------------------|\n|property|string|The property the listing is sorted by.|\n|order|string|Sort order: asc or desc.|\n",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "PriceListGroup"
        ]
      }
    },
    "/profiles/current": {
      "get": {
        "summary": "getCurrentProfile",
        "produces": [
          "application/json"
        ],
        "operationId": "getCurrentProfile",
        "description": "Get Current Profile. Get the current profile. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getCurrentProfile",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Profiles"
        ]
      },
      "put": {
        "summary": "updateProfile",
        "produces": [
          "application/json"
        ],
        "operationId": "updateProfile",
        "description": "Update Profile. Updates customer profile attributes. Optionally takes the x-ccasset-language header to get translated content in another language. Dynamic Properties of profile can also be updated like any other attribute (\"dynamicPropertyKey\":\"dynamicPropertyValue\").",
        "responses": "responses/updateProfile",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/updateProfile_request"
            },
            "in": "body",
            "name": "updateProfile_request"
          }
        ],
        "tags": [
          "Profiles"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/services/{id}/terminate": {
      "post": {
        "summary": "terminateService",
        "produces": [
          "application/json"
        ],
        "operationId": "terminateService",
        "description": "Renew a service associated with a user.",
        "responses": "responses/terminateService",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of an asset.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/action_request"
            },
            "in": "body",
            "name": "transactionDate"
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/merchant/samlSettings": {
      "get": {
        "summary": "getSamlSettings",
        "produces": [
          "application/json"
        ],
        "operationId": "getSamlSettings",
        "description": "Get Saml Settings. Get the SAML settings",
        "responses": "responses/getSamlSettings",
        "parameters": [
          {
            "in": "query",
            "name": "encode",
            "description": "Should the Entity Descriptor be Base64 encoded.",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Merchant Settings"
        ]
      }
    },
    "/assembler/assemble": {
      "get": {
        "summary": "assemble",
        "produces": [
          "application/json"
        ],
        "operationId": "assemble",
        "description": "Assemble. Invokes assembler with the service which is given at path query parameter then assemble the service response and return it from the endpoint. Currently, we support only '/typeahead' service path.",
        "responses": "responses/assemble",
        "parameters": [
          {
            "in": "query",
            "name": "path",
            "description": "Assembler service path. A Path query parameter can be like path=/typeahead \n\nNote: We support only '/typeahead' service in current release.'",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Assembler"
        ]
      }
    },
    "/merchant/cloudConfiguration": {
      "get": {
        "summary": "getCloudConfiguration",
        "produces": [
          "application/json"
        ],
        "operationId": "getCloudConfiguration",
        "description": "Get Cloud Configuration. Gets the configurations from server.",
        "responses": "responses/getCloudConfiguration",
        "tags": [
          "Merchant Settings"
        ]
      }
    },
    "/products": {
      "get": {
        "summary": "listProducts",
        "produces": [
          "application/json"
        ],
        "operationId": "listProducts",
        "description": "List Products. Get a list of products. Optionally takes the x-ccasset-language headers to get translated content in another language.Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization id of logged in user. None of the image URLS are encoded.",
        "responses": "responses/listProducts",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "description": "A SCIM filter string for selecting a subset of all products. See [https://tools.ietf.org/html/draft-ietf-scim-api-12#section-3.2.2](https://tools.ietf.org/html/draft-ietf-scim-api-12#section-3.2.2)section 3.2.2.2 of the SCIM specification for details on the SCIM filter format.\n\rExamples:\n\rGet all products whose displayName contains shirt: q=displayName co \"shirt\"\n\rGet all products with an orderLimit between 5 and 10: q=orderLimit gt 5 and orderLimit lt 10\n\rText, date and time values appearing in SCIM filters should be quoted, with date and time values using ISO-8601 format. Numeric and boolean values should not be quoted.\n\rThe following base product properties can be used in a q query:\n\r * CountryOfOrigin\n\r * active\n\r * avgCustRating\n\r * brand\n\r * childSKUs\n\r * defaultProductListingSku\n\r * description\n\r * displayName\n\r * height\n\r * id\n\r * length\n\r * longDescription\n\r * notForIndividualSale\n\r * orderLimit\n\r * parentCategories\n\r * relatedArticles\n\r * relatedMediaContent\n\r * type\n\r * unitOfMeasure\n\r * weight\n\r * width\n\rAdditionally, custom product properties may also be used in a q query.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "totalResults",
            "description": "flag to include count of total products without expansion",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "catalogId",
            "description": "the catalog ID for the site",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "startingIndex the index of the first record to load",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "productIds",
            "description": "the list of product IDs",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "includeChildren",
            "description": "flag to include children of categories or not",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "totalExpandedResults",
            "description": "flag to include count of total products with listing variant expansion",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of items per block",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sort Option id: Sort order",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "categoryId",
            "description": "the category ID",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "includeChildSKUsListingIds",
            "description": "If this flag is true then listingVariant repository id will be included in each of the childSKU of style based product",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "storePriceListGroupId",
            "description": "the price list group id for which product prices are to be returned",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/locations": {
      "get": {
        "summary": "listLocations",
        "produces": [
          "application/json"
        ],
        "operationId": "listLocations",
        "description": "List Locations. Retrieves and lists all the available locations using the given query options for paging and sorting.",
        "responses": "responses/listLocations",
        "parameters": [
          {
            "in": "query",
            "name": "total",
            "description": "The total number of location items.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Index of the first location item to return. The default is 0.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of location items to return. The default is 10.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "description": "The location items sorting criteria. Following are the fields supported by this param: \n\n|Field|Type|Description|\n|------------------|------------------|------------------|\n|property|string|The property by which to sort the list of location items.  The default is locationId.|\n|order|string|The sort order, either 'asc' (ascending) or 'desc' (decending).  The default is 'asc'.|\n",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Locations"
        ]
      }
    },
    "/countries/shippingCountries": {
      "get": {
        "summary": "getShippingCountries",
        "produces": [
          "application/json"
        ],
        "operationId": "getShippingCountries",
        "description": "Get Shipping Countries. Lists all the configured shipping countries.",
        "responses": "responses/getShippingCountries",
        "parameters": [
          {
            "in": "query",
            "name": "currentPriceListGroup",
            "description": "Boolean flag to set whether to only return shippingCountries configured for current price list group or to return all the shipping countries.",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Country Region"
        ]
      }
    },
    "/merchant/defaultPriceListGroup": {
      "get": {
        "summary": "getDefaultPriceListGroup",
        "produces": [
          "application/json"
        ],
        "operationId": "getDefaultPriceListGroup",
        "description": "Get Default Price List Group. Get default PriceListGroup",
        "responses": "responses/getDefaultPriceListGroup",
        "tags": [
          "Merchant Settings"
        ]
      }
    },
    "/merchant/priceListCurrency": {
      "get": {
        "summary": "getPriceListCurrency",
        "produces": [
          "application/json"
        ],
        "operationId": "getPriceListCurrency",
        "description": "Get Price List Currency. Get the currency of the default price list. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getPriceListCurrency",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Merchant Settings"
        ]
      }
    },
    "/scheduledOrders/current/scheduledOrders": {
      "get": {
        "summary": "listScheduledOrdersByProfile",
        "produces": [
          "application/json"
        ],
        "operationId": "listScheduledOrdersByProfile",
        "description": "List Scheduled Orders By Profile. It will return the list of all the scheduled orders for the current profile. Optionally takes the X-CCOrganization header to specify current Organization context of logged in user.",
        "responses": "responses/listScheduledOrdersByProfile",
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Offset of the scheduled orders list.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "limit of the scheduled orders list.",
            "type": "integer",
            "required": false
          }
        ],
        "tags": [
          "Scheduled Orders"
        ]
      }
    },
    "/inventories/{id}": {
      "get": {
        "summary": "getInventory",
        "produces": [
          "application/json"
        ],
        "operationId": "getInventory",
        "description": "Get Inventory. Get inventory information for a variant or product. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getInventory",
        "parameters": [
          {
            "in": "query",
            "name": "catalogId",
            "description": "ID of the catalog.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationIds",
            "description": "A comma-separated list of location IDs for which inventory detail information is to be retrieved",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "description": "Type of data whose inventory information it to be retrieved. The options are \"product\" and \"variant\". Defaults to \"variant\".",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "includeDefaultLocationInventory",
            "description": "If set to true then inventory detail not associated with any particular location will be included alongside the location specific inventory details",
            "type": "boolean",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product or sku whose inventory detail information is to be retrieved. The ID given should correspond to the type given. So if the type is a product, a product ID has to be given here else a sku ID.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/profiles/resetPassword": {
      "post": {
        "summary": "resetPassword",
        "produces": [
          "application/json"
        ],
        "operationId": "resetPassword",
        "description": "Reset Password. Used to generate new password for the user,if profile exists with the entered login. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/resetPassword",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/resetPassword_request"
            },
            "in": "body",
            "name": "resetPassword_request"
          }
        ],
        "tags": [
          "Profiles"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/orders/cancel": {
      "post": {
        "summary": "cancelOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "cancelOrder",
        "description": "cancels order and returns the updated order",
        "responses": "responses/cancelOrder",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/cancelOrder_request"
            },
            "in": "body",
            "name": "cancelOrder_request"
          }
        ],
        "tags": [
          "Orders"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/purchaseLists/{id}": {
      "get": {
        "summary": "getPurchaseList",
        "produces": [
          "application/json"
        ],
        "operationId": "getPurchaseList",
        "description": "Get Purchase List. This operation is used to get the Purchase list information of a from Oracle Commerce Cloud.",
        "responses": "responses/getPurchaseList",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the requested Purchase list.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "PurchaseLists"
        ]
      },
      "delete": {
        "summary": "deletePurchaseList",
        "produces": [
          "application/json"
        ],
        "operationId": "deletePurchaseList",
        "description": "Delete Purchase List. This operation is used to delete the Purchase list information from Oracle Commerce Cloud.",
        "responses": "responses/deletePurchaseList",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the Purchase list.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "PurchaseLists"
        ]
      },
      "put": {
        "summary": "updatePurchaseList",
        "produces": [
          "application/json"
        ],
        "operationId": "updatePurchaseList",
        "description": "Update Purchase List. This operation is used to update properties of a purchase list.\nDynamic Properties of purchase list can be added in the the request using the key value pair structure (\"dynamicPropertyKey\":\"dynamicPropertyValue\"). These property values can take the types of boolean, date, float, string, timestamp, enumerated, big string.",
        "responses": "responses/updatePurchaseList",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the Purchase List to be updated.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/updatePurchaseList_request"
            },
            "in": "body",
            "name": "updatePurchaseList_request"
          }
        ],
        "tags": [
          "PurchaseLists"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/services": {
      "get": {
        "summary": "getServices",
        "produces": [
          "application/json"
        ],
        "operationId": "getServices",
        "description": "Gets a list of services associated with a user.",
        "responses": "responses/getServices",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "description": "The actual paging size used by the server.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "The offset used in the current page.",
            "type": "integer",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/orders/requestQuote": {
      "post": {
        "summary": "requestQuote",
        "produces": [
          "application/json"
        ],
        "operationId": "requestQuote",
        "description": "Request Quote. Request for a quote on an incomplete order or request for a requote on a quoted order. Optionally takes the x-ccasset-language headers to get translated content in another language.",
        "responses": "responses/requestQuote",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/requestQuote_request"
            },
            "in": "body",
            "name": "requestQuote_request"
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/returnRequests": {
      "post": {
        "summary": "createReturnRequest",
        "produces": [
          "application/json"
        ],
        "operationId": "createReturnRequest",
        "description": "Creates return request and returns the appropriate ID. Persists in DB. Optionally takes the x-ccasset-language headers to get translated content in another language. Also, additionally takes X-CCOrganization and x-ccsite headers.",
        "responses": "responses/createReturnRequest",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/createReturnRequest_request"
            },
            "in": "body",
            "name": "createReturnRequest_request"
          }
        ],
        "tags": [
          "Return Requests"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/publish": {
      "get": {
        "summary": "getLastPublishedTime",
        "produces": [
          "application/json"
        ],
        "operationId": "getLastPublishedTime",
        "description": "Get Last Published Time. Returns the last published time(in long number format).",
        "responses": "responses/getLastPublishedTime",
        "tags": [
          "Publishing"
        ]
      }
    },
    "/files/urlMappings": {
      "put": {
        "summary": "getFileURLs",
        "produces": [
          "application/json"
        ],
        "operationId": "getFileURLs",
        "description": "Get File URLs. Get a number of file URLs (mappings) given a number of file paths. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getFileURLs",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/getFileURLs_request"
            },
            "in": "body",
            "name": "getFileURLs_request"
          }
        ],
        "tags": [
          "Files"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/organizationMembers/{id}": {
      "get": {
        "summary": "getMember",
        "produces": [
          "application/json"
        ],
        "operationId": "getMember",
        "description": "Get Member. This operation is used to get the profile information of a customer that is associated to an account from Oracle Commerce Cloud. Optionally takes the x-ccasset-language headers to get translated content in another language.Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization id of logged in user.",
        "responses": "responses/getMember",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request. E.g., en,de,fr_CA.",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the requested shopper profile.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Organization Members"
        ]
      },
      "put": {
        "summary": "updateMember",
        "produces": [
          "application/json"
        ],
        "operationId": "updateMember",
        "description": "Update Member. This operation is used to update customer name, email, role, status of a customer profile and contact dynamic properties. Optionally takes the X-CCOrganization headers  to specify current Organization id of logged in user.",
        "responses": "responses/updateMember",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the shopper profile to be updated.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/updateMember_request"
            },
            "in": "body",
            "name": "updateMember_request"
          }
        ],
        "tags": [
          "Organization Members"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/orders/{id}/returnRequests": {
      "get": {
        "summary": "listReturnRequests",
        "produces": [
          "application/json"
        ],
        "operationId": "listReturnRequests",
        "description": "Lists all return requests for a given order ID. Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization context of logged in user.",
        "responses": "responses/listReturnRequests",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The order ID to retreive all related return requests.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/shippingMethods": {
      "post": {
        "summary": "listShippingMethods",
        "produces": [
          "application/json"
        ],
        "operationId": "listShippingMethods",
        "description": "List Shipping Methods. Get a list of shipping methods that are valid for a given address. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/listShippingMethods",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/listShippingMethods_request"
            },
            "in": "body",
            "name": "listShippingMethods_request"
          }
        ],
        "tags": [
          "Shipping Methods"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/purchaseLists/{id}/updateItems": {
      "post": {
        "summary": "updateItems",
        "produces": [
          "application/json"
        ],
        "operationId": "updateItems",
        "description": "Update Purchase List Items. This operation is used to update the purchase list items.  \nBasic operations include add, delete, update. add operation is considered as default if nothing is specified in the input payload.",
        "responses": "responses/updateItems",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/updateItems_request"
            },
            "in": "body",
            "name": "updateItems_request"
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the Purchase list.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "PurchaseLists"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/organizationAddresses": {
      "post": {
        "summary": "addAddress",
        "produces": [
          "application/json"
        ],
        "operationId": "addAddress",
        "description": "Add Address. This endpoint is used to add addresses of a Organization/Account in Oracle Commerce Cloud.Optionally takes the X-CCOrganization header  to specify current Organization context of logged in user.",
        "responses": "responses/addAddress",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/addAddress_request"
            },
            "in": "body",
            "name": "addAddress_request"
          }
        ],
        "tags": [
          "Organizations Addresses"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "summary": "getAddresses",
        "produces": [
          "application/json"
        ],
        "operationId": "getAddresses",
        "description": "Get Addresses. This operation is used to get the all the address of a Organization/Account Oracle Commerce Cloud.Optionally takes the X-CCOrganization header  to specify current Organization context of logged in user.",
        "responses": "responses/getAddresses",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Organizations Addresses"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/orders/checkRequiresApproval": {
      "post": {
        "summary": "checkRequiresApproval",
        "produces": [
          "application/json"
        ],
        "operationId": "checkRequiresApproval",
        "description": "Check Requires Approval. Check for an order if it requires an approval or not. Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization context of logged in user.",
        "responses": "responses/checkRequiresApproval",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/checkRequiresApproval_request"
            },
            "in": "body",
            "name": "checkRequiresApproval_request"
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/scheduledOrders/{id}": {
      "get": {
        "summary": "getScheduledOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "getScheduledOrder",
        "description": "Get Scheduled Order. It will return the scheduled order based on scheduled order id.Optionally takes the X-CCOrganization header to specify current Organization context of logged in user.This endpoint returns the order details irrespective of organization ID passed in request header. If user doesn't belong to order's organization, then the user has no access to order.",
        "responses": "responses/getScheduledOrder",
        "parameters": [
          {
            "in": "query",
            "name": "orderDetails",
            "description": "Order Details of Scheduled Order.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id of the Scheduled order.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Scheduled Orders"
        ]
      },
      "delete": {
        "summary": "deleteScheduledOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "deleteScheduledOrder",
        "description": "Delete Scheduled Order. It will delete the scheduled order based on scheduled order id. Optionally takes the X-CCOrganization header to specify current Organization context of logged in user.",
        "responses": "responses/deleteScheduledOrder",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id of the Scheduled order.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Scheduled Orders"
        ]
      },
      "put": {
        "summary": "updateScheduledOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "updateScheduledOrder",
        "description": "Update Scheduled Order. It will update the scheduled order information like deactivate, change the schedule information. Optionally takes the X-CCOrganization header to specify current Organization context of logged in user .",
        "responses": "responses/updateScheduledOrder",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id of the Scheduled order.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/updateScheduledOrder_request"
            },
            "in": "body",
            "name": "updateScheduledOrder_request"
          }
        ],
        "tags": [
          "Scheduled Orders"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/files/{id}": {
      "get": {
        "summary": "getFile",
        "produces": [
          "*/*"
        ],
        "operationId": "getFile",
        "description": "Get File. Get a file by ID. Returns the file. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getFile",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID of the file.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Files"
        ]
      }
    },
    "/metadata-catalog": {
      "get": {
        "summary": "getMetadataCatalog",
        "produces": [
          "application/json"
        ],
        "operationId": "getMetadataCatalog",
        "description": "Get Metadata Catalog. Returns metadata catalog. Returns Swagger metadata catalog.",
        "responses": "responses/getMetadataCatalog",
        "tags": [
          "Store Metadata Catalog"
        ]
      }
    },
    "/orders/current": {
      "post": {
        "summary": "updateCurrentProfileOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "updateCurrentProfileOrder",
        "description": "Update Current Profile Order.  Updates the persisted order for the logged in user. Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization context of logged in user.  Dynamic Properties of order  and order line items can also be updated like any other attribute (\"dynamicPropertyKey\":\"dynamicPropertyValue\").",
        "responses": "responses/updateCurrentProfileOrder",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/updateCurrentProfileOrder_request"
            },
            "in": "body",
            "name": "updateCurrentProfileOrder_request"
          }
        ],
        "tags": [
          "Orders"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "summary": "getIncompleteOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "getIncompleteOrder",
        "description": "Get Incomplete Order. Returns incomplete order of the logged-in user. Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization context of logged in user.",
        "responses": "responses/getIncompleteOrder",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Orders"
        ]
      },
      "delete": {
        "summary": "removeCurrentProfileIncompleteOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "removeCurrentProfileIncompleteOrder",
        "description": "Remove Current Profile Incomplete Order. Removes the persisted order for the logged in user. Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization context of logged in user.",
        "responses": "responses/removeCurrentProfileIncompleteOrder",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/orders/{id}": {
      "post": {
        "summary": "getInitialOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "getInitialOrder",
        "description": "Get Initial Order. Returns an incomplete order that has been initiated with the payment type. Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization context of logged in user.",
        "responses": "responses/getInitialOrder",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id is the payment type in the order being retrieved.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/getInitialOrder_request"
            },
            "in": "body",
            "name": "getInitialOrder_request"
          }
        ],
        "tags": [
          "Orders"
        ]
      },
      "get": {
        "summary": "getOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "getOrder",
        "description": "Get Order. Get an order. Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization context of logged in user.This endpoint returns the order details irrespective of organization ID passed in request header. If user doesn't belong to order's organization, then the user has no access to order.",
        "responses": "responses/getOrder",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "the id of the order to retrieve.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Orders"
        ]
      },
      "put": {
        "summary": "updateOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "updateOrder",
        "description": "Update Order. Update an order. Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization context of logged in user.  Dynamic Properties of order and order line items can also be updated like any other attribute (\"dynamicPropertyKey\":\"dynamicPropertyValue\").",
        "responses": "responses/updateOrder",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of order to update.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/updateOrder_request"
            },
            "in": "body",
            "name": "updateOrder_request"
          }
        ],
        "tags": [
          "Orders"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/profiles/current/siteProperties": {
      "get": {
        "summary": "listSiteProperties",
        "produces": [
          "application/json"
        ],
        "operationId": "listSiteProperties",
        "description": "Gets the list of all the site based properties for the current profile.",
        "responses": "responses/listSiteProperties",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "This field specifies the offset/starting index from which data to be fetched.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "This is the field to specify the number of records to be fetched per REST call.",
            "type": "integer",
            "required": false
          }
        ],
        "tags": [
          "Profiles"
        ]
      },
      "put": {
        "summary": "updateSiteProperties",
        "produces": [
          "application/json"
        ],
        "operationId": "updateSiteProperties",
        "description": "Updates the site based properties for the current profile. Can be used to update multiple properties of multiple sites at the same time. ",
        "responses": "responses/updateSiteProperties",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "This field specifies the offset/starting index from which data to be fetched.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "This is the field to specify the number of records to be fetched per REST call.",
            "type": "integer",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/updateSiteProperties_request"
            },
            "in": "body",
            "name": "updateSiteProperties_request"
          }
        ],
        "tags": [
          "Profiles"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/prices/skus": {
      "get": {
        "summary": "getAllSKUsPrices",
        "produces": [
          "application/json"
        ],
        "operationId": "getAllSKUsPrices",
        "description": "Get All SKUs Prices. Return the the list, sale and complex prices for the list of SKUs. Optionally takes the -ccasset-language header to get translated content in another language.",
        "responses": "responses/getAllSKUsPrices",
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "the list of SKU IDs",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Prices"
        ]
      }
    },
    "/skus": {
      "get": {
        "summary": "listSkus",
        "produces": [
          "application/json"
        ],
        "operationId": "listSkus",
        "description": "List Skus. Gets the data and related selected options of a list of SKUs",
        "responses": "responses/listSkus",
        "parameters": [
          {
            "in": "query",
            "name": "catalogId",
            "description": "the catalog ID for the site",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "skuIds",
            "description": "The comma separated list of skuIds.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "storePriceListGroupId",
            "description": "The price list group ID of the current Store.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Skus"
        ]
      }
    },
    "/profiles/updateExpiredPassword": {
      "post": {
        "summary": "updateExpiredPassword",
        "produces": [
          "application/json"
        ],
        "operationId": "updateExpiredPassword",
        "description": "Update Expired Password. Used to change password of the profile,if current password is expired. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/updateExpiredPassword",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/updateExpiredPassword_request"
            },
            "in": "body",
            "name": "updateExpiredPassword_request"
          }
        ],
        "tags": [
          "Profiles"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/shippingRegions": {
      "get": {
        "summary": "getShippingRegionsByCountry",
        "produces": [
          "application/json"
        ],
        "operationId": "getShippingRegionsByCountry",
        "description": "Get Shipping Regions By Country. Lists all the shipping regions for the given countryID. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getShippingRegionsByCountry",
        "parameters": [
          {
            "in": "query",
            "name": "country",
            "description": "CountryCode of the country to retrieve regions.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "sortByCode",
            "description": "Code specifying regions to sort either by ISO code or displayName",
            "type": "boolean",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Shipping Regions"
        ]
      }
    },
    "/timezones": {
      "get": {
        "summary": "listTimezones",
        "produces": [
          "application/json"
        ],
        "operationId": "listTimezones",
        "description": "List Timezones. Get a list of timezones and the currently selected timezone. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/listTimezones",
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Index of the first element to return.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of items to return.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sorting criteria. Following are the fields supported by this param: \n\n|Field|Type|Description|\n|------------------|------------------|------------------|\n|property|string|The property the listing is sorted by.|\n|order|string|Sort order: asc or desc.|\n",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Timezone"
        ]
      }
    },
    "/itemTypes/{id}": {
      "get": {
        "summary": "getItemType",
        "produces": [
          "application/json"
        ],
        "operationId": "getItemType",
        "description": "Get Item Type. Get item type and base type info.",
        "responses": "responses/getItemType",
        "parameters": [
          {
            "in": "query",
            "name": "parent",
            "description": "Parent Type of current requested item type. It takes product as default parent for custom types.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "includeBase",
            "description": "Set to true to get base type details.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID of the item type.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Item Types"
        ]
      }
    },
    "/shippingMethods/{id}": {
      "get": {
        "summary": "getShippingMethod",
        "produces": [
          "application/json"
        ],
        "operationId": "getShippingMethod",
        "description": "Get Shipping Method. Get a shipping method. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getShippingMethod",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "the id of the shipping method to get",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Shipping Methods"
        ]
      }
    },
    "/countries": {
      "get": {
        "summary": "listCountries",
        "produces": [
          "application/json"
        ],
        "operationId": "listCountries",
        "description": "List Countries. List all the configured countries. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/listCountries",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Country Region"
        ]
      }
    },
    "/pages": {
      "get": {
        "summary": "getPages",
        "produces": [
          "application/json"
        ],
        "operationId": "getPages",
        "description": "Get Pages. Get all pages defined in the application.",
        "responses": "responses/getPages",
        "tags": [
          "Pages"
        ]
      }
    },
    "/stockStatus/{id}": {
      "get": {
        "summary": "getStockStatus",
        "produces": [
          "application/json"
        ],
        "operationId": "getStockStatus",
        "description": "Get Stock Status. Gets the stock status of a product against the quantity requested. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getStockStatus",
        "parameters": [
          {
            "in": "query",
            "name": "catalogId",
            "description": "Catalog Id of the product",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "skuId",
            "description": "Id of the SKU of the product",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "Id of the product to get the stock status",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Stock Status"
        ]
      }
    },
    "/countries/{id}": {
      "get": {
        "summary": "getCountryRegions",
        "produces": [
          "application/json"
        ],
        "operationId": "getCountryRegions",
        "description": "Get Country Regions. Get Country and all its regions. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getCountryRegions",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the country.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Country Region"
        ]
      }
    },
    "/organizationAddresses/{id}": {
      "get": {
        "summary": "getAddress",
        "produces": [
          "application/json"
        ],
        "operationId": "getAddress",
        "description": "Get Address. This endpoint is used to get address by its id of a Organization/Account in Oracle Commerce Cloud.Optionally takes the X-CCOrganization header  to specify current Organization context of logged in user.",
        "responses": "responses/getAddress",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the address that has to be updated.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Organizations Addresses"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "deleteAddress",
        "produces": [
          "application/json"
        ],
        "operationId": "deleteAddress",
        "description": "Delete Address. This endpoint is used to delete address by its id of a Organization/Account in Oracle Commerce Cloud.Optionally takes the X-CCOrganization header  to specify current Organization context of logged in user.",
        "responses": "responses/deleteAddress",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the address that has to be deleted.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Organizations Addresses"
        ]
      },
      "put": {
        "summary": "updateAddress",
        "produces": [
          "application/json"
        ],
        "operationId": "updateAddress",
        "description": "Update Address. This endpoint is used to update address by its id of a Organization/Account in Oracle Commerce Cloud. All the properties in the request are optional but atleast one property is required to update an address.Optionally takes the X-CCOrganization header  to specify current Organization context of logged in user.",
        "responses": "responses/updateAddress",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the address that has to be updated.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/updateAddress_request"
            },
            "in": "body",
            "name": "updateAddress_request"
          }
        ],
        "tags": [
          "Organizations Addresses"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/payment": {
      "post": {
        "summary": "addPayments",
        "produces": [
          "application/json"
        ],
        "operationId": "addPayments",
        "description": "Add Payments. Add payments to an order.",
        "responses": "responses/addPayments",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/addPayments_request"
            },
            "in": "body",
            "name": "addPayments_request"
          }
        ],
        "tags": [
          "Payment"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/pages/layout/{path: .*}": {
      "get": {
        "summary": "getLayout",
        "produces": [
          "application/json"
        ],
        "operationId": "getLayout",
        "description": "Get Layout. Returns the layout(regions) of a specific page. If the layout ids are added to layoutsRendered parameter and included in the request and if it matches the current page's layout id, then only the region ids for the requested layout are returned, because regions are stored in the simple-cache.js on the client.",
        "responses": "responses/getLayout",
        "parameters": [
          {
            "in": "query",
            "name": "disableMinify",
            "description": "Boolean flag to return minified or non minified Javascript links in layout information (for example disableMinify=true). Can only be used in Preview, ignored in Storefront.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "usePreviewData",
            "description": "Boolean flag to determine whether to use preview data.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "layoutsRendered",
            "description": "Contains the list of layout ids rendered on the client. If any id in it matches the requested page's layout id, then only region ids are returned.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageParam",
            "description": "Page param (for example pageParam=cat90016).",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "usePageId",
            "description": "Use specific repository id for page, rather than the default.",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "path: .*",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Pages"
        ]
      }
    },
    "/sites": {
      "get": {
        "summary": "listSites",
        "produces": [
          "application/json"
        ],
        "operationId": "listSites",
        "description": "List Sites. Get the list of available sites.",
        "responses": "responses/listSites",
        "tags": [
          "Sites"
        ]
      }
    },
    "/merchant": {
      "get": {
        "summary": "getExternalServicesData",
        "produces": [
          "application/json"
        ],
        "operationId": "getExternalServicesData",
        "description": "Get External Services Data. Get all the external service data objects. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getExternalServicesData",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Merchant Settings"
        ]
      }
    },
    "/itemTypes": {
      "get": {
        "summary": "listItemTypes",
        "produces": [
          "application/json"
        ],
        "operationId": "listItemTypes",
        "description": "List Item Types. Get item type info and base type info of a list of item types.",
        "responses": "responses/listItemTypes",
        "parameters": [
          {
            "in": "query",
            "name": "parent",
            "description": "Parent Type of current requested item type. It takes product as default parent for custom types.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "includeBase",
            "description": "Set to true to get base type details.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "itemTypeIds",
            "description": "Comma separated list of item types to be returned",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Item Types"
        ]
      }
    },
    "/errorLogs": {
      "post": {
        "summary": "createErrorlog",
        "operationId": "createErrorlog",
        "description": "Create Errorlog. Create an error log entry.",
        "responses": "responses/createErrorlog",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/createErrorlog_request"
            },
            "in": "body",
            "name": "createErrorlog_request"
          }
        ],
        "tags": [
          "Error Log Entries"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/prices/products": {
      "get": {
        "summary": "getAllProductsPrices",
        "produces": [
          "application/json"
        ],
        "operationId": "getAllProductsPrices",
        "description": "Get All Products Prices. Return the the list, sale and complex prices for the list of products. Optionally takes the -ccasset-language header to get translated content in another language.",
        "responses": "responses/getAllProductsPrices",
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "description": "the list of product IDs",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Prices"
        ]
      }
    },
    "/productTypes": {
      "get": {
        "summary": "listProductTypes",
        "produces": [
          "application/json"
        ],
        "operationId": "listProductTypes",
        "description": "List Product Types. List the product types. Returns all the product types when id is not specified.",
        "responses": "responses/listProductTypes",
        "tags": [
          "Product Types"
        ]
      }
    },
    "/profiles/current/addresses": {
      "post": {
        "summary": "addProfileAddress",
        "produces": [
          "application/json"
        ],
        "operationId": "addProfileAddress",
        "description": "Add profile address for a shopper. Any B2C user can add profile address. The B2B user needs to have profileAddressManager role in the current organization.",
        "responses": "responses/addProfileAddress",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/addProfileAddress_request"
            },
            "in": "body",
            "name": "addProfileAddress_request"
          }
        ],
        "tags": [
          "Customers"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "summary": "listProfileAddresses",
        "produces": [
          "application/json"
        ],
        "operationId": "listProfileAddresses",
        "description": "Get Profile Addresses specific to the customer profile.",
        "responses": "responses/listProfileAddresses",
        "parameters": [],
        "tags": [
          "Customers"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/payment/genericCardResponses": {
      "post": {
        "summary": "updatePaymentGroupFromGenericResponse",
        "produces": [
          "application/json"
        ],
        "operationId": "updatePaymentGroupFromGenericResponse",
        "description": "Update Payment Group From Generic Response. Called by Merchant to post the authorization response after payer authentication.",
        "responses": "responses/updatePaymentGroupFromGenericResponse",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/updatePaymentGroupFromGenericResponse_request"
            },
            "in": "body",
            "name": "updatePaymentGroupFromGenericResponse_request"
          }
        ],
        "tags": [
          "Payment"
        ]
      }
    },
    "/api": {
      "get": {
        "summary": "getEndpointAPIs",
        "produces": [
          "application/json"
        ],
        "operationId": "getEndpointAPIs",
        "description": "Get Endpoint APIs. Get the endpoint API doc info.",
        "responses": "responses/getEndpointAPIs",
        "tags": [
          "OAuth"
        ]
      }
    },
    "/locations/{id}": {
      "get": {
        "summary": "getLocation",
        "produces": [
          "application/json"
        ],
        "operationId": "getLocation",
        "description": "Get Location. Retrieves the location details for a given location id.",
        "responses": "responses/getLocation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the requested location.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "type",
            "description": "The type of location, for example: store.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Locations"
        ]
      }
    },
    "/priceListGroups/{id}": {
      "get": {
        "summary": "getPriceListGroup",
        "produces": [
          "application/json"
        ],
        "operationId": "getPriceListGroup",
        "description": "Get Price List Group. Get a single PriceListGroup item.",
        "responses": "responses/getPriceListGroup",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the requested PriceListGroup.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "PriceListGroup"
        ]
      }
    },
    "/profiles/current/addresses/{addressId}": {
      "get": {
        "summary": "getProfileAddress",
        "produces": [
          "application/json"
        ],
        "operationId": "getProfileAddress",
        "description": "Get Profile Address specific to the customer profile based on the address Id",
        "responses": "responses/getProfileAddress",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The customer profile id.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "addressId",
            "description": "The address Id associated to profile.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "delete": {
        "summary": "deleteProfileAddress",
        "produces": [
          "application/json"
        ],
        "operationId": "deleteProfileAddress",
        "description": "Deletes the address associated to the profile and the address info. In order a B2B user to delete address, should have profile address manager role.",
        "responses": "responses/deleteProfileAddress",
        "parameters": [
          {
            "in": "path",
            "name": "addressId",
            "description": "The address Id associated to profile.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "put": {
        "summary": "updateProfileAddress",
        "produces": [
          "application/json"
        ],
        "operationId": "updateProfileAddress",
        "description": "Update profile address of the customer. If the customer is B2B, then the customer should have profile address manager role in that organization.",
        "responses": "responses/updateProfileAddress",
        "parameters": [
          {
            "in": "path",
            "name": "addressId",
            "description": "The address Id associated to profile.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/updateProfileAddress_request"
            },
            "in": "body",
            "name": "updateProfileAddress_request"
          }
        ],
        "tags": [
          "Customers"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/logout": {
      "post": {
        "summary": "logout",
        "produces": [
          "application/json"
        ],
        "operationId": "logout",
        "description": "Logout. Perform logout operation.",
        "responses": "responses/logout",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/logout_request"
            },
            "in": "body",
            "name": "logout_request"
          }
        ],
        "tags": [
          "OAuth"
        ]
      }
    },
    "/shopperContext": {
      "post": {
        "summary": "setShopperContext",
        "produces": [
          "application/json"
        ],
        "operationId": "setShopperContext",
        "description": "SetShopperContext. This operation fetches the PriceListGroup,Catalog and Additional PriceListGroups determined by External Price Group and Catalog Webhook using current context/Event sent by user.Also updates X-OCStateData header with the encrypted response.",
        "responses": "responses/setShopperContext",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/setShopperContext_request"
            },
            "in": "body",
            "name": "setShopperContext"
          }
        ],
        "tags": [
          "Shopper Context Endpoint"
        ]
      }
    },
    "/search": {
      "get": {
        "summary": "search",
        "produces": [
          "application/json"
        ],
        "operationId": "search",
        "description": "Search. Perform a search given an endeca based query. The response is a formatted endeca JSON that provides all the data based on the type of search.",
        "responses": "responses/search",
        "tags": [
          "Search"
        ]
      }
    },
    "/samlAuthnRequest": {
      "post": {
        "summary": "samlAuthnRequest",
        "produces": [
          "application/json"
        ],
        "operationId": "samlAuthnRequest",
        "description": "Saml Authn Request. Create a SAML AuthnRequest",
        "responses": "responses/samlAuthnRequest",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/samlAuthnRequest_request"
            },
            "in": "body",
            "name": "samlAuthnRequest_request"
          }
        ],
        "tags": [
          "SAML AuthnRequest"
        ]
      }
    },
    "/merchant/cancelReasons": {
      "get": {
        "summary": "getCancelReasons",
        "produces": [
          "application/json"
        ],
        "operationId": "getCancelReasons",
        "description": "Get cancel Reasons. Lists the cancel reasons that can be given while receiving items against a cancel request",
        "responses": "responses/getCancelReasons",
        "tags": [
          "Merchant Settings"
        ]
      }
    },
    "/orders/price": {
      "post": {
        "summary": "priceOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "priceOrder",
        "description": "Price Order. Price an order. Optionally takes the x-ccasset-language headers to get translated content in another language.Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization context of logged in user.",
        "responses": "responses/priceOrder",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/priceOrder_request"
            },
            "in": "body",
            "name": "priceOrder_request"
          }
        ],
        "tags": [
          "Orders"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/returnRequests/calculateRefund": {
      "post": {
        "summary": "calculateRefund",
        "produces": [
          "application/json"
        ],
        "operationId": "calculateRefund",
        "description": "Calculates Refund Amounts. Gets list of items along with suggested refund amounts. Optionally takes the x-ccasset-language headers to get translated content in another language. Also, additionally takes X-CCOrganization and x-ccsite headers.",
        "responses": "responses/calculateRefund",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/calculateRefund_request"
            },
            "in": "body",
            "name": "calculateRefund_request"
          }
        ],
        "tags": [
          "Return Requests"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/organizations/removeContacts": {
      "post": {
        "summary": "removeContacts",
        "produces": [
          "application/json"
        ],
        "operationId": "removeContacts",
        "description": "Remove Contacts. This operation is used to remove a contact from the organization by delegatedAdmin. The delegated Admin cannot remove the contact if the contact is the last approval in the organization. \nThis endPoint accepts the organization Id in the header. If the organization Id is passed in the header, that organization becomes the current id for delegated Admin.Optionally takes the X-CCOrganization header  to specify current Organization id of logged in user.",
        "responses": "responses/removeContacts",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "the organization Id to which delegated Admin Belongs to",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/removeContacts_request"
            },
            "in": "body",
            "name": "removeContacts_request"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/publish/event": {
      "post": {
        "summary": "pushPubEvent",
        "produces": [
          "application/json"
        ],
        "operationId": "pushPubEvent",
        "description": "Push Pub Event. Used by admin to send a publishing event to the storefront server",
        "responses": "responses/pushPubEvent",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/pushPubEvent_request"
            },
            "in": "body",
            "name": "pushPubEvent_request"
          }
        ],
        "tags": [
          "Publishing"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/organizations/{id}": {
      "get": {
        "summary": "getOrganization",
        "produces": [
          "application/json"
        ],
        "operationId": "getOrganization",
        "description": "Get Organization. This operation is used to get the Organization information of a customer from Oracle Commerce Cloud.Optionally takes the X-CCOrganization header  to specify current Organization id of logged in user.",
        "responses": "responses/getOrganization",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the requested Organization.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "put": {
        "summary": "updateOrganization",
        "produces": [
          "application/json"
        ],
        "operationId": "updateOrganization",
        "description": "Update Organization. This operation is used to update properties like approval required, order price limit and dynamic properties (\"dynamicPropertyName\": \"dynamicPropertyValue\") for an organization.Optionally takes the X-CCOrganization header  to specify current Organization id of logged in user.",
        "responses": "responses/updateOrganization",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the Organization to be updated.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/updateOrganization_request"
            },
            "in": "body",
            "name": "updateOrganization_request"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/returnRequests/validate": {
      "post": {
        "summary": "validateReturns",
        "produces": [
          "application/json"
        ],
        "operationId": "validateReturns",
        "description": "validates Return requests. It validates the return items for each request. If items are not given in requests it gets list of items from an order for which return request can be created. Optionally takes the x-ccasset-language headers to get translated content in another language. Also, additionally takes X-CCOrganization and x-ccsite headers.",
        "responses": "responses/validateReturns",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/validateReturns_request"
            },
            "in": "body",
            "name": "validateReturns_request"
          }
        ],
        "tags": [
          "Return Requests"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/countries/billingCountries": {
      "get": {
        "summary": "getBillingCountries",
        "produces": [
          "application/json"
        ],
        "operationId": "getBillingCountries",
        "description": "Get Billing Countries. Lists all the billing countries.",
        "responses": "responses/getBillingCountries",
        "parameters": [
          {
            "in": "query",
            "name": "pSortOrder",
            "description": "Specify the sort order of how the billing countries should be returned. Valid values are asc and desc. The default value it asc",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Country Region"
        ]
      }
    },
    "/audienceMembership": {
      "get": {
        "summary": "getAudienceMembership",
        "produces": [
          "application/json"
        ],
        "operationId": "getAudienceMembership",
        "description": "Get Audience Membership. Given an ordered list of audiences, return the first audience the                       current profile belongs to, the subset of all audiences the current profile belongs to,                       or an indication that the current profile belongs to none of them.  If the current profile doesn't                       belong to any Audiences in the list, a 204 No Content will be returned.  If                       match=first is specified and there is a match, the returned audienceMembership                       array will only have one element.",
        "responses": "responses/getAudienceMembership",
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "description": "This parameter is a comma delimited ordered list of candidate Audience IDs the current user might be a member of.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "match",
            "description": "This parameter specifies whether to return all matched Audiences or just the first match.            The only acceptable values are first or all.  The default is all.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Audience Membership"
        ]
      }
    },
    "/orders/validActions/{id}": {
      "get": {
        "summary": "getValidActions",
        "produces": [
          "application/json"
        ],
        "operationId": "getValidActions",
        "description": "Fetches all the valid operations allowed to the order",
        "responses": "responses/getValidActions",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "the id of the order to retrieve.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/collections/{id}": {
      "get": {
        "summary": "getCollection",
        "produces": [
          "application/json"
        ],
        "operationId": "getCollection",
        "description": "Get Collection. Get a collection by ID.  Optionally takes the x-ccasset-language headers to get translated content in another language.Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization id of logged in user.",
        "responses": "responses/getCollection",
        "parameters": [
          {
            "in": "query",
            "name": "maxLevel",
            "description": "Maximum level of depth for child categories.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "expand",
            "description": "If set to childCategories, then child categories will be expanded to include details, if there are any active products under it. disableActiveProdCheck can be set to true in case the category details are needed irrespective of active products are available.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "catalogId",
            "description": "ID of the catalog.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "disableActiveProdCheck",
            "description": "False indicates category details are not returned if there are no active products under the category. True indicates category details are returned irrespective of the active products availability.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "ID of collection.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Collections"
        ]
      }
    },
    "/organizations": {
      "get": {
        "summary": "listOrganizations",
        "produces": [
          "application/json"
        ],
        "operationId": "listOrganizations",
        "description": "List Organizations. This operation is used to get the collection of customer organizations from Oracle Commerce Cloud. It can also be used to return the list on a searched string and in a sorted order against various properties of organization.Optionally takes the X-CCOrganization header  to specify current Organization id of logged in user.",
        "responses": "responses/listOrganizations",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "description": "Query string built as per the SCIM standards that helps to search entered string across account properties like 'name'.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "This field determines the offset/starting index from which data to be fetched.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "This is the field to determine number of records to be fetched per REST call.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "description": "This field determines the sort order of the list to be fetched.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Organizations"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/login": {
      "post": {
        "summary": "login",
        "produces": [
          "application/json"
        ],
        "operationId": "login",
        "description": "Login. Perform login operation.",
        "responses": "responses/login",
        "parameters": [
          {
            "in": "formData",
            "name": "password",
            "description": "Authorization parameter for password.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "grant_type",
            "description": "Authorization parameter for grant type.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "username",
            "description": "Authorization parameter for username.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "OAuth"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/refresh": {
      "post": {
        "summary": "refresh",
        "produces": [
          "application/json"
        ],
        "operationId": "refresh",
        "description": "Refresh. Refresh an oauth token.",
        "responses": "responses/refresh",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/refresh_request"
            },
            "in": "body",
            "name": "refresh_request"
          }
        ],
        "tags": [
          "OAuth"
        ]
      }
    },
    "/profiles": {
      "post": {
        "summary": "createProfile",
        "produces": [
          "application/json"
        ],
        "operationId": "createProfile",
        "description": "Create Profile. If email does not exist in the repository create a new profile with email and password and return the id else return an error message.Optionally takes the x-ccasset-language header to get translated content in another language. Dynamic Properties can also be passed like any other attribute (\"dynamicPropertyKey\":\"dynamicPropertyValue\").",
        "responses": "responses/createProfile",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/createProfile_request"
            },
            "in": "body",
            "name": "createProfile_request"
          }
        ],
        "tags": [
          "Profiles"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/services/{id}/modify": {
      "post": {
        "summary": "modifyService",
        "produces": [
          "application/json"
        ],
        "operationId": "modifyService",
        "description": "Modify a service associated with a user.",
        "responses": "responses/modifyService",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of an asset.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/action_request"
            },
            "in": "body",
            "name": "transactionDate"
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/healthCheck/payments": {
      "get": {
        "summary": "getPaymentGatewayAuthorizationHealthCheck",
        "produces": [
          "application/json"
        ],
        "operationId": "getPaymentGatewayAuthorizationHealthCheck",
        "description": "Get Payment Gateway Authorization Health Check. Get Payment Gateway authorization health state.",
        "responses": "responses/getPaymentGatewayAuthorizationHealthCheck",
        "parameters": [
          {
            "in": "query",
            "name": "gatewayName",
            "description": "Gateway for health check.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "operation",
            "description": "Operation to health check.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Health Check"
        ]
      },
      "put": {
        "summary": "updatePaymentGatewayAuthorizationHealth",
        "produces": [
          "application/json"
        ],
        "operationId": "updatePaymentGatewayAuthorizationHealth",
        "description": "Update Payment Gateway Authorization Health. Set Payment Gateway authorization health state",
        "responses": "responses/updatePaymentGatewayAuthorizationHealth",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/updatePaymentGatewayAuthorizationHealth_request"
            },
            "in": "body",
            "name": "updatePaymentGatewayAuthorizationHealth_request"
          }
        ],
        "tags": [
          "Health Check"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/services/{id}": {
      "get": {
        "summary": "getService",
        "produces": [
          "application/json"
        ],
        "operationId": "getService",
        "description": "Get a particular service associated with a user.",
        "responses": "responses/getService",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of an asset.",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/addresses": {
      "get": {
        "summary": "listAddresses",
        "produces": [
          "application/json"
        ],
        "operationId": "listAddresses",
        "description": "List Addresses. This operation is used to get the list of addresses of an organization.Optionally takes the X-CCOrganization header  to specify current Organization context of logged in user.",
        "responses": "responses/listAddresses",
        "parameters": [
          {
            "in": "query",
            "name": "include",
            "description": "Query string to get all/inherited secondaryAddresses. \"all\"/\"inheritedOnly\" are the only allowed values. If include is not specified, secondaryAddresses of that organization is returned. If value of include is \"all\" , then secondaryAddresses of that organization as well as secondaryAddresses of parent organizations is returned. Whereas in case of \"inheritedOnly\", secondaryAddresses of parentOrganization is returned.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "This field determines the offset/starting index from which data to be fetched.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "This is the field to determine number of records to be fetched per REST call.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "orgId",
            "description": "Organization Id whose addresses has to be fetched",
            "type": "string",
            "required": true
          },
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Organizations Address List"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/currencies": {
      "get": {
        "summary": "listCurrencies",
        "produces": [
          "application/json"
        ],
        "operationId": "listCurrencies",
        "description": "List Currencies. Get a list of currencies and the currently selected currency.",
        "responses": "responses/listCurrencies",
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "description": "Index of the first element to return.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "The number of items to return.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "includeDeleted",
            "description": "If true, include soft deleted items in results. If false or not present, exclude them.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sorting criteria.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Currency"
        ]
      }
    },
    "/stockStatus": {
      "get": {
        "summary": "getStockStatuses",
        "produces": [
          "application/json"
        ],
        "operationId": "getStockStatuses",
        "description": "Get Stock Statuses. Gets the stock statuses and orderable quantity details of all the items in the cart. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getStockStatuses",
        "parameters": [
          {
            "in": "query",
            "name": "catalogId",
            "description": "Catalog Ids of the products",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "products",
            "description": "Product ids separated by comma",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Stock Status"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "getProduct",
        "produces": [
          "application/json"
        ],
        "operationId": "getProduct",
        "description": "Get Product. Get a product.  Optionally takes the x-ccasset-language headers to get translated content in another language.Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization id of logged in user.None of the image URLS are encoded.",
        "responses": "responses/getProduct",
        "parameters": [
          {
            "in": "query",
            "name": "catalogId",
            "description": "the catalog ID of the site",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "storePriceListGroupId",
            "description": "the price list group id for which product prices are to be returned",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "the id of the product to retrieve",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/merchant/{id}": {
      "get": {
        "summary": "getExternalServiceData",
        "produces": [
          "application/json"
        ],
        "operationId": "getExternalServiceData",
        "description": "Get External Service Data. Get a single external service data object. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getExternalServiceData",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the external application data. In the form \"{serverType}-{applicationName}\".",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Merchant Settings"
        ]
      }
    },
    "/productTypes/{id}": {
      "get": {
        "summary": "getProductType",
        "produces": [
          "application/json"
        ],
        "operationId": "getProductType",
        "description": "Get Product Type. Get product type info",
        "responses": "responses/getProductType",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of the file.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Product Types"
        ]
      }
    },
    "/files/store/current/{fileName}": {
      "get": {
        "summary": "getCurrentVersionStoreFile",
        "produces": [
          "*/*"
        ],
        "operationId": "getCurrentVersionStoreFile",
        "description": "Get Current Version Store File. Download the current version file from the preview or live file store. Will return a 404 if the file does not exist.",
        "responses": "responses/getCurrentVersionStoreFile",
        "parameters": [
          {
            "in": "path",
            "name": "fileName",
            "description": "name of the file.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Files"
        ]
      }
    },
    "/logging/logClientErrors": {
      "post": {
        "summary": "logClientErrors",
        "operationId": "logClientErrors",
        "description": "Log Client Errors. Create an error log entry for client errors. Expects the JSON to contain an clientSideErrors array.",
        "responses": "responses/logClientErrors",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/logClientErrors_request"
            },
            "in": "body",
            "name": "logClientErrors_request"
          }
        ],
        "tags": [
          "Logging"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/scheduledOrders": {
      "post": {
        "summary": "createScheduledOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "createScheduledOrder",
        "description": "Create Scheduled Order. Create the scheduledOrder based on existing order. Optionally takes the X-CCOrganization header to specify current Organization context of logged in user.",
        "responses": "responses/createScheduledOrder",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/createScheduledOrder_request"
            },
            "in": "body",
            "name": "createScheduledOrder_request"
          }
        ],
        "tags": [
          "Scheduled Orders"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/pages/{path: .*}": {
      "get": {
        "summary": "getPage",
        "produces": [
          "application/json"
        ],
        "operationId": "getPage",
        "description": "Get Page. Returns a specific page. For product/category page responses, productTypes information is also returned as part of the data->page response.",
        "responses": "responses/getPage",
        "parameters": [
          {
            "in": "query",
            "name": "disableMinify",
            "description": "Boolean flag to return minified or non minified Javascript links in layout information (for example disableMinify=true). Can only be used in Preview, ignored in Storefront.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "dataOnly",
            "description": "Boolean flag to set whether to only return data (for example dataOnly=false).",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "productTypesRequired",
            "description": "Boolean flag to indicate whether productTypes data is needed in the response. This parameter will be useful only on product and category pages, as productTypes is currently returned in those pages.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "layoutOnly",
            "description": "Boolean flag to set whether to only return layout data (for example layoutOnly=true). It can be used only if dataOnly is false.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "cacheableDataOnly",
            "description": "Boolean flag to set whether to only cacheable data (for example cacheableDataOnly=true). It can be used only if dataOnly is false.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageParam",
            "description": "Page param (for example pageParam=cat90016).",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "currentDataOnly",
            "description": "Boolean flag to set whether to only return current data (for example currentDataOnly=true). It can be used only if dataOnly is false.",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "path: .*",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Pages"
        ]
      }
    },
    "/inventories": {
      "get": {
        "summary": "listInventories",
        "produces": [
          "application/json"
        ],
        "operationId": "listInventories",
        "description": "List Inventories. List inventories information for the comma seperated variants or products. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/listInventories",
        "parameters": [
          {
            "in": "query",
            "name": "catalogId",
            "description": "ID of the catalog.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "locationIds",
            "description": "A comma-separated list of location IDs for which inventory detail information is to be retrieved",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "type",
            "description": "Type of data whose inventory information it to be retrieved. The options are \"product\" and \"variant\". Defaults to \"variant\".",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "includeDefaultLocationInventory",
            "description": "If set to true then inventory detail not associated with any particular location will be included alongside the location specific inventory details",
            "type": "boolean",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "ids",
            "description": "The comma seperated IDs of the product or sku whose inventory detail information is to be retrieved. The IDs given should correspond to the type given. So if the type is a product, product IDs has to be given here else sku IDs.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/paymentGroups/{id}": {
      "get": {
        "summary": "getPaymentGroup",
        "produces": [
          "application/json"
        ],
        "operationId": "getPaymentGroup",
        "description": "Get Payment Group. Get PaymentGroup authorization status an order. Optionally takes the x-ccasset-language header to get translated content in another language.",
        "responses": "responses/getPaymentGroup",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Payment Groups"
        ]
      }
    },
    "/payment/responses": {
      "post": {
        "summary": "updatePaymentGroupFromCyberSourceResponse",
        "produces": [
          "application/json"
        ],
        "operationId": "updatePaymentGroupFromCyberSourceResponse",
        "description": "Update Payment Group From Cyber Source Response. Called by CyberSource to post the result of the authorization request.",
        "responses": "responses/updatePaymentGroupFromCyberSourceResponse",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/updatePaymentGroupFromCyberSourceResponse_request"
            },
            "in": "body",
            "name": "updatePaymentGroupFromCyberSourceResponse_request"
          }
        ],
        "tags": [
          "Payment"
        ]
      },
      "put": {
        "summary": "updatePaymentResponseWithClientError",
        "produces": [
          "application/json"
        ],
        "operationId": "updatePaymentResponseWithClientError",
        "description": "Update Payment Response With Client Error. Called by Storefront to post the error returned by CyberSource if SOP request is not accepted.",
        "responses": "responses/updatePaymentResponseWithClientError",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/updatePaymentResponseWithClientError_request"
            },
            "in": "body",
            "name": "updatePaymentResponseWithClientError_request"
          }
        ],
        "tags": [
          "Payment"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/organizationRequests": {
      "post": {
        "summary": "createOrganizationRequest",
        "produces": [
          "application/json"
        ],
        "operationId": "createOrganizationRequest",
        "description": "Creates organization request. This operation is used to create organization request in Oracle Commerce Cloud for a customer.",
        "responses": "responses/createOrganizationRequest",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/createOrganizationRequest_request"
            },
            "in": "body",
            "name": "createOrganizationRequest_request"
          }
        ],
        "tags": [
          "Organization Request"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/logging": {
      "get": {
        "summary": "Query the storefront server logs for client side errors",
        "produces": [
          "application/json"
        ],
        "operationId": "getLogs",
        "description": "Query the client side logs, using optional filter parameters to return log entries. \r\nClient errors are typically javascript errors reported from the users' browsers.",
        "responses": "responses/getLogs",
        "parameters": [
          {
            "default": false,
            "in": "query",
            "name": "includeArchives",
            "description": "Include entries from archived log files?",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "queryText",
            "description": "Limit the returned error messages to those containing the query text. (Case sensitive)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "until",
            "description": "Either \n\r 0. An ISO-8601 formatted string. \n\r 0. A millisecond timestamp value. representing the 'to' date and time to be used when querying the logs",
            "type": "string",
            "required": false
          },
          {
            "default": "clientErrors",
            "in": "query",
            "name": "type",
            "description": "'clientErrors' is the only type currently supported",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "since",
            "description": "Either \n\r 0. An ISO-8601 formatted string. \n\r 0. A millisecond timestamp value. representing the 'from' date and time to be used when querying the logs.",
            "type": "string",
            "required": false
          },
          {
            "default": 7,
            "in": "query",
            "name": "numArchiveFiles",
            "description": "The number of previous archived log files to be queried. (0 = unlimited). Defaults to 7 archive files.",
            "type": "integer",
            "required": false
          }
        ],
        "tags": [
          "Logging"
        ]
      }
    },
    "/orders": {
      "post": {
        "summary": "createOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "createOrder",
        "description": "Create Order. Create an order. Dynamic Properties of order and order line items can be added in the the request using the key value pair structure (\"dynamicPropertyKey\":\"dynamicPropertyValue\"). These property values can take the types of boolean, date, float, string, timestamp, enumerated, big string.  Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization id of logged in user.",
        "responses": "responses/createOrder",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/createOrder_request"
            },
            "in": "body",
            "name": "createOrder_request"
          }
        ],
        "tags": [
          "Orders"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "summary": "getAllOrdersForProfile",
        "produces": [
          "application/json"
        ],
        "operationId": "getAllOrdersForProfile",
        "description": "Get All Orders For Profile. Retrieves all orders associated with the logged in user. Also if the user is approver, orders of other users of the organziation which are requiring approval will be sent, Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization context of logged in user.",
        "responses": "responses/getAllOrdersForProfile",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "description": "This field specifies the query used to limit the orders returns. Defaults to RQL. To use SCIM use the queryFormat parameter",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "Starting index.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "countOnly",
            "description": "Only return the count of orders for the current profile.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Specifies the number of orders to be retrieved starting from offset. In case this is not present, the complete list of orders for the profile is returned.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "description": "This field specifies the sort order of the list to be fetched.",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/api/{id}": {
      "get": {
        "summary": "getEndpointAPI",
        "produces": [
          "application/json"
        ],
        "operationId": "getEndpointAPI",
        "description": "Get Endpoint API. Get detailed API doc info for an endpoint by ID.",
        "responses": "responses/getEndpointAPI",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the endpoint.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "OAuth"
        ]
      }
    },
    "/services/{id}/renew": {
      "post": {
        "summary": "renewService",
        "produces": [
          "application/json"
        ],
        "operationId": "renewService",
        "description": "Renew a service associated with a user.",
        "responses": "responses/renewService",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of an asset.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/action_request"
            },
            "in": "body",
            "name": "transactionDate"
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/organizationMembers": {
      "post": {
        "summary": "createMember",
        "produces": [
          "application/json"
        ],
        "operationId": "createMember",
        "description": "Create Member. This operation is used to create a profile in Oracle Commerce Cloud for a customer. Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization id of logged in user.",
        "responses": "responses/createMember",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/createMember_request"
            },
            "in": "body",
            "name": "createMember_request"
          }
        ],
        "tags": [
          "Organization Members"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "summary": "listMembers",
        "produces": [
          "application/json"
        ],
        "operationId": "listMembers",
        "description": "List Members. This operation is used to get the collection of customer profiles from Oracle Commerce Cloud. Optionally takes the x-ccasset-language headers to get translated content in another language.Also it optionally takes X-CCOrganization to specify current Organization  of logged in user. It can also be used to return the list on a searched string and in a sorted order against various properties of profile.",
        "responses": "responses/listMembers",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "description": "Query string built as per the SCIM standards that helps to search entered string across contact properties, 'firstName', 'lastName', 'email' and role",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "This field determines the offset/starting index from which data to be fetched.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "This is the field to determine number of records to be fetched per REST call.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "description": "This field determines the sort order of the list to be fetched.",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCAsset-Language",
            "description": "The asset language of the request",
            "type": "string",
            "required": false
          },
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Organization Members"
        ]
      }
    },
    "/images": {
      "get": {
        "summary": "getImages",
        "produces": [
          "image/jpeg",
          "image/png",
          "image/gif"
        ],
        "operationId": "getImages",
        "description": "Get Images. Gets an image and optionally resizes and converts it to a different format. Image resizing and conversion is not available for GIF source images. Endpoint responds with a content type of 'application/json' in error conditions, otherwise one of 'image/jpeg', 'image/png', or 'image/gif' depending on the source image and specified parameters.",
        "responses": "responses/getImages",
        "parameters": [
          {
            "in": "query",
            "name": "alphaChannelColor",
            "description": "The hex color code used to replace the transparency layer when converting images to JPEG. Default is FFFFFF.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "width",
            "description": "The maximum width of the resized image. Required along with the 'height' parameter for the image to be resized.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "source",
            "description": "The source location of the original image.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "outputFormat",
            "description": "Output format of the converted image. JPEG is the only supported output format. When specified, the source image is converted to a JPEG except for GIF images which are not converted.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "height",
            "description": "The maximum height of the resized image. Required along with the 'width' parameter for the image to be resized.",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "quality",
            "description": "Quality of the image transformation: 0.0 (worst/fast) - 1.0 (best/slow). Default is 1.0.",
            "type": "number",
            "required": false
          }
        ],
        "tags": [
          "Images"
        ]
      }
    },
    "/orders/rejectQuote": {
      "post": {
        "summary": "rejectQuote",
        "produces": [
          "application/json"
        ],
        "operationId": "rejectQuote",
        "description": "Reject Quote. Request for a quote on an incomplete order or request for a requote on a quoated order. Optionally takes the x-ccasset-language headers to get translated content in another language.",
        "responses": "responses/rejectQuote",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/rejectQuote_request"
            },
            "in": "body",
            "name": "rejectQuote_request"
          }
        ],
        "tags": [
          "Orders"
        ]
      }
    },
    "/payment/types": {
      "get": {
        "summary": "getPaymentTypes",
        "produces": [
          "application/json"
        ],
        "operationId": "getPaymentTypes",
        "description": "Get Payment Types. Get payment types",
        "responses": "responses/getPaymentTypes",
        "tags": [
          "Payment"
        ]
      }
    },
    "/purchaseLists": {
      "post": {
        "summary": "createPurchaseList",
        "produces": [
          "application/json"
        ],
        "operationId": "createPurchaseList",
        "description": "Create Purchase List. This operation is used to create a purchase list for a given site, account, user context.Each purchase list should have a unique name for a given user. \nDynamic Properties of purchase list can be added in the the request using the key value pair structure (\"dynamicPropertyKey\":\"dynamicPropertyValue\"). These property values can take the types of boolean, date, float, string, timestamp, enumerated, big string.",
        "responses": "responses/createPurchaseList",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/createPurchaseList_request"
            },
            "in": "body",
            "name": "createPurchaseList_request"
          }
        ],
        "tags": [
          "PurchaseLists"
        ],
        "consumes": [
          "application/json"
        ]
      },
      "get": {
        "summary": "listPurchaseLists",
        "produces": [
          "application/json"
        ],
        "operationId": "listPurchaseLists",
        "description": "List PurchaseLists. This operation is used to get the collection of purchase lists from Oracle Commerce Cloud. It can also be used to return the list on a searched string and in a sorted order against various properties of purchase list.",
        "responses": "responses/listPurchaseLists",
        "parameters": [
          {
            "in": "query",
            "name": "purchaseListItemCount",
            "description": "Whether to include purchase list item count in the response.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "q",
            "description": "Query string built as per the SCIM standards that helps to search entered string across purchase list properties like 'name'.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "offset",
            "description": "This field determines the offset/starting index from which data to be fetched.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "This is the field to determine number of records to be fetched per REST call.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "description": "This field determines the sort order of the list to be fetched.",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "PurchaseLists"
        ]
      }
    },
    "/staticWishlistPages/{id}": {
      "post": {
        "summary": "generateStaticWishlistPage",
        "produces": [
          "application/json"
        ],
        "operationId": "generateStaticWishlistPage",
        "description": "Generate Static Wishlist Page. Generates a static version of a shared wishlist page.",
        "responses": "responses/generateStaticWishlistPage",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the wishlist.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/generateStaticWishlistPage_request"
            },
            "in": "body",
            "name": "generateStaticWishlistPage_request"
          }
        ],
        "tags": [
          "Static Wishlist"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/orders/approve": {
      "post": {
        "summary": "approveOrder",
        "produces": [
          "application/json"
        ],
        "operationId": "approveOrder",
        "description": "Approve Order. Approver approves an order. Optionally takes the x-ccasset-language headers to get translated content in another language. Also it can have optional X-CCOrganization header which is a JSON field to specify current Organization context of logged in user.",
        "responses": "responses/approveOrder",
        "parameters": [
          {
            "in": "header",
            "name": "X-CCOrganization",
            "description": "Current organization context of the logged in user",
            "type": "string",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/definitions/approveOrder_request"
            },
            "in": "body",
            "name": "approveOrder_request"
          }
        ],
        "tags": [
          "Orders"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/returnRequests/initiate": {
      "post": {
        "summary": "initiateReturn",
        "produces": [
          "application/json"
        ],
        "operationId": "initiateReturn",
        "description": "Initiate Return. It initiates a new return request. Gets list of items from an order for which return request can be created. Optionally takes the x-ccasset-language headers to get translated content in another language. Also, additionally takes X-CCOrganization and x-ccsite headers.",
        "responses": "responses/initiateReturn",
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/initiateReturn_request"
            },
            "in": "body",
            "name": "initiateReturn_request"
          }
        ],
        "tags": [
          "Return Requests"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/analytics/pageViews": {
      "post": {
        "summary": "analytics send page view",
        "produces": [
          "application/json"
        ],
        "operationId": "sendAnalyticsPageView",
        "description": "Send Analytics",
        "responses": "responses/sendAnalyticsPageView",
        "parameters": [
          {
            "in": "body",
            "name": "pageViews",
            "description": "Page view number",
            "type": "number",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/sendAnalyticsPageView_request"
            },
            "in": "body",
            "name": "sendAnalyticsPageView_request"
          }
        ],
        "tags": [
          "Page Views"
        ],
        "consumes": [
          "application/json"
        ]
      }
    },
    "/analytics/visitorsMetric": {
      "post": {
        "summary": "analytics send visitors metrics",
        "produces": [
          "application/json"
        ],
        "operationId": "sendAnalyticsVisitorsMetric",
        "description": "Send Analytics visitors metrics",
        "responses": "responses/sendAnalyticsVisitorsMetric",
        "parameters": [
          {
            "in": "body",
            "name": "visitId",
            "description": "Visit ID",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "visitorId",
            "description": "visitorId ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/sendAnalyticsPageView_request"
            },
            "in": "body",
            "name": "sendAnalyticsPageView_request"
          }
        ],
        "tags": [
          "Page Views"
        ],
        "consumes": [
          "application/json"
        ]
      }
    }
  },
  "host": "ccadmin-dev-zd8a.oracleoutsourcing.com:443",
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "tags": [
    {
      "name": "Merchant Settings",
      "description": "Endpoints for merchant settings."
    },
    {
      "name": "Assembler",
      "description": "Assembler endpoint assembles response from assembler based on the requested service."
    },
    {
      "name": "Products",
      "description": "Product endpoints"
    },
    {
      "name": "Shipping Regions",
      "description": "Shipping Regions Endpoints"
    },
    {
      "name": "Profiles",
      "description": "Profile endpoints"
    },
    {
      "name": "Timezone",
      "description": "Endpoints for operations on timezones."
    },
    {
      "name": "Shipping Methods",
      "description": "Endpoints for listing shipping methods, as well as getting individual shipping methods"
    },
    {
      "name": "Organization Request",
      "description": "End points for operations for account based commerce in Oracle Commerce Cloud"
    },
    {
      "name": "Item Types",
      "description": "Item Type endpoints to get item type and base type details"
    },
    {
      "name": "Payment Groups",
      "description": "Payment Group  endpoints"
    },
    {
      "name": "Logging",
      "description": "Endpoints that interact with the server's log files."
    },
    {
      "name": "Locations",
      "description": "Endpoints to support operations related to locations."
    },
    {
      "name": "Collections",
      "description": "Collections endpoints"
    },
    {
      "name": "Search",
      "description": "Search endpoints"
    },
    {
      "name": "Prices",
      "description": "Prices endpoints"
    },
    {
      "name": "Inventory",
      "description": "Inventory endpoints"
    },
    {
      "name": "Orders",
      "description": "Order endpoints"
    },
    {
      "name": "SAML AuthnRequest",
      "description": "Endpoint to generate a new SAML AuthnRequest"
    },
    {
      "name": "Scheduled Orders",
      "description": "Endpoints for scheduled orders."
    },
    {
      "name": "Health Check",
      "description": "Health check endpoints."
    },
    {
      "name": "Country Region",
      "description": "Endpoints for read operations on Country and its region/provinces"
    },
    {
      "name": "Organizations Address List",
      "description": "End points for operations for paginated list of addresses of a Organization/Account in Oracle Commerce Cloud by Delegated Admin"
    },
    {
      "name": "Payment",
      "description": "Payment endpoints."
    },
    {
      "name": "Organizations",
      "description": "End points for operations for account-based commerce in Oracle Commerce Cloud"
    },
    {
      "name": "Images",
      "description": "Dynamic Image endpoints"
    },
    {
      "name": "Currency",
      "description": "Endpoints for operations on currencies."
    },
    {
      "name": "Product Types",
      "description": "Product Type endpoints."
    },
    {
      "name": "Publishing",
      "description": "Publishing endpoints for storefront server"
    },
    {
      "name": "Error Log Entries",
      "description": "Error Log Entry endpoints."
    },
    {
      "name": "Organizations Addresses",
      "description": "End points for operations for addresses of a Organization/Account in Oracle Commerce Cloud by Delegated Admin"
    },
    {
      "name": "Pages",
      "description": "Page endpoints"
    },
    {
      "name": "PriceListGroup",
      "description": "Endpoints for operations on PriceListGroups."
    },
    {
      "name": "Sites",
      "description": "Site endpoints"
    },
    {
      "name": "PurchaseLists",
      "description": "End points for operations on Purchase List in Oracle Commerce Cloud"
    },
    {
      "name": "Stock Status",
      "description": "Stock Status endpoints"
    },
    {
      "name": "Services",
      "description": "Services endpoints"
    },
    {
      "name": "Static Wishlist",
      "description": "Static Wishlist endpoints"
    },
    {
      "name": "OAuth",
      "description": "OAuth endpoints"
    },
    {
      "name": "Files",
      "description": "File endpoints"
    },
    {
      "name": "Store Metadata Catalog",
      "description": "Metadata Catalog Store Endpoints"
    },
    {
      "name": "Organization Members",
      "description": "The details of customer profile created for account-based commerce, the customer profile includes email, first name, last name, and roles."
    },
    {
      "name": "Return Requests",
      "description": "Return Request Endpoints"
    },
    {
      "name": "Audience Membership",
      "description": "Endpoint for determining Audience membership"
    },
    {
      "name": "Skus",
      "description": "Sku endpoints"
    }
  ],
  "info": {
    "description": "The API details of the Oracle Commerce Cloud.",
    "title": "Oracle Commerce Cloud Store API",
    "version": "1.0"
  }
}